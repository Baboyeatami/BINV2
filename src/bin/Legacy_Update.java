/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package bin;

import java.awt.HeadlessException;
import java.awt.Image;
import static java.awt.image.ImageObserver.WIDTH;
import java.io.File;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.StandardCopyOption;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author Sammy Guergachi <sguergachi at gmail.com>
 */
public class Legacy_Update extends javax.swing.JFrame {
boolean isUser=false;
String IPAString,SDCSDString;
Boolean isUSER;
int ID;
    /**
     * Creates new form Legacy
     */
    public Legacy_Update() {
        setBounds(467,237,0,0);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        f_name = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        Lname = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        M_Name = new javax.swing.JTextField();
        jLabel28 = new javax.swing.JLabel();
        alias = new javax.swing.JTextField();
        Inden_char = new javax.swing.JTextField();
        jLabel41 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        IAPS_Loc = new javax.swing.JLabel();
        SDCSCS_Loc = new javax.swing.JLabel();
        P_Barangay = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel60 = new javax.swing.JLabel();
        dateReC = new com.toedter.calendar.JDateChooser();
        jPanel2 = new javax.swing.JPanel();
        PictureView = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        ImageFilePath = new javax.swing.JLabel();

        setTitle("Update Legacy Informant");
        setBounds(new java.awt.Rectangle(306, 204, 0, 0));

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        f_name.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jLabel19.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel19.setText("*First Name:");

        jLabel20.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel20.setText("*Middle Name");

        Lname.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        Lname.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                LnameCaretUpdate(evt);
            }
        });
        Lname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LnameActionPerformed(evt);
            }
        });

        jLabel21.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel21.setText("*Last Name");

        M_Name.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jLabel28.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel28.setText("*Alias");

        alias.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jLabel41.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel41.setText("*Identifying Characteristics");

        jButton1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/bin/images/Information.png"))); // NOI18N
        jButton1.setText("Update SDC SDS ");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel1.setText("*IAPS");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel2.setText("*SDC SCS");

        jButton2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/bin/images/About.png"))); // NOI18N
        jButton2.setText("Update IAPS ");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton4.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/bin/images/Apply.png"))); // NOI18N
        jButton4.setText("Update");
        jButton4.setPreferredSize(new java.awt.Dimension(139, 35));
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton6.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/bin/images/Close.png"))); // NOI18N
        jButton6.setText("Close");
        jButton6.setPreferredSize(new java.awt.Dimension(139, 35));
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        IAPS_Loc.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        IAPS_Loc.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        SDCSCS_Loc.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        SDCSCS_Loc.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        P_Barangay.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        P_Barangay.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select  Barangay", "Balasinon", "Buguis", "Carre", "Clib", "Harada Butai", "Katipunan", "Kiblagon", "Labon", "Laperas", "Lapla", "Litos", "Luparan", "Mckinley", "New Cebu", "Osme√±a", "Palili", "Parame", "Poblacion", "Roxas", "Solongvale", "Tagolilong", "Tala-o", "Talas", "Tanwalang", "Waterfall" }));

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel3.setText("*Barangay");

        jLabel4.setForeground(new java.awt.Color(255, 0, 0));
        jLabel4.setText("* Fields Required");

        jLabel60.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel60.setText("*Date of Recruitment");

        dateReC.setDateFormatString("MMMMM d, yyyy");
        dateReC.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        dateReC.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                dateReCPropertyChange(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel21)
                                            .addComponent(jLabel19)
                                            .addComponent(jLabel20))
                                        .addGap(47, 47, 47)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(f_name, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(M_Name, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(Lname, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel60)
                                            .addComponent(jLabel3)
                                            .addComponent(jLabel28))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(P_Barangay, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(dateReC, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(alias, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addComponent(jLabel41))
                                .addGap(1, 1, 1))
                            .addComponent(Inden_char, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 298, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(38, 38, 38)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel1)
                                    .addComponent(IAPS_Loc, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(SDCSCS_Loc, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(36, 36, 36)
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(174, 174, 174)
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(1, 1, 1))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel19)
                            .addComponent(f_name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel20)
                            .addComponent(M_Name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel21)
                            .addComponent(Lname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(dateReC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel60))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(P_Barangay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(alias, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel28))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel41)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Inden_char, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(IAPS_Loc, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(3, 3, 3)
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(SDCSCS_Loc, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        PictureView.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        PictureView.setPreferredSize(new java.awt.Dimension(200, 200));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(PictureView, javax.swing.GroupLayout.DEFAULT_SIZE, 0, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(PictureView, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel6.setText("Recent Photo");

        jButton3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jButton3.setText("Update Recent Photo ");
        jButton3.setMaximumSize(new java.awt.Dimension(200, 23));
        jButton3.setMinimumSize(new java.awt.Dimension(200, 23));
        jButton3.setPreferredSize(new java.awt.Dimension(200, 23));
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        ImageFilePath.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        ImageFilePath.setPreferredSize(new java.awt.Dimension(200, 4));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(63, 63, 63)
                        .addComponent(jLabel6)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(ImageFilePath, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(ImageFilePath, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void LnameCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_LnameCaretUpdate
        // TODO add your handling code here:
    }//GEN-LAST:event_LnameCaretUpdate

    private void LnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LnameActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_LnameActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
    
        if (f_name.getText().equals("")) {
            JOptionPane.showMessageDialog(this,"All fields are required");
        }
        else if (M_Name.getText().equals("")) {
            JOptionPane.showMessageDialog(this,"All fields are required");
        }
         else if (Lname.getText().equals("")) {
            JOptionPane.showMessageDialog(this,"All fields are required");
        }
         else if (alias.getText().equals("")) {
            JOptionPane.showMessageDialog(this,"All fields are required");
        }
         else if (Inden_char.getText().equals("")) {
            JOptionPane.showMessageDialog(this,"All fields are required");
        }
         else if (IAPS_Loc.getText().equals("")) {
            JOptionPane.showMessageDialog(this,"All fields are required");
        }
         else if (SDCSCS_Loc.getText().equals("")) {
            JOptionPane.showMessageDialog(this,"All fields are required");
        }
          else if (P_Barangay.getSelectedItem().equals("")) {
            JOptionPane.showMessageDialog(this,"All fields are required");
        }
          
          else if (dateReC.getDate()==null) {
            JOptionPane.showMessageDialog(this,"All fields are required");
        }
          
          else{
              
              int i=JOptionPane.showConfirmDialog(this,"Legacy informant will be updated. Do you want to continue?","Update Legacy",JOptionPane.YES_NO_OPTION);
            if (i==0) {
                //if (!VerifyINput()) {
                    UpdateLegacy();
               // }
             
          }

          }

        //LoadNameOnlyData();

    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        System.out.println(this.getBounds());
        this.setVisible(false);
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        try {
            // TODO add your handling code here:
           int i=JOptionPane.showConfirmDialog(this,"Update IPAS scanned image will replace the current scanned image. Do you want to Continue?","Update Legacy",JOptionPane.YES_NO_OPTION);
               
            if (i==0) {
                
            JFileChooser chooser=new JFileChooser();
            chooser.showOpenDialog(this);
            File sFile=chooser.getSelectedFile();
            //BufferedImage bufferedImage=ImageIO.read(sFile);
            Image image=ImageIO.read(sFile);
            //Image myImage=image.getScaledInstance(161, 151,Image.SCALE_FAST);
            
            
            File sourFile=new File(sFile.getAbsolutePath());
           File desFile =new File(System.getProperty("user.dir")+"\\\\legacy\\\\"+f_name.getText()+Lname.getText()+M_Name.getText()+"IAPS"+".jpg");
       
            if (desFile.exists()) {
                    System.out.println("file exist");
             Files.copy(sourFile.toPath(), desFile.toPath(),StandardCopyOption.COPY_ATTRIBUTES,StandardCopyOption.REPLACE_EXISTING);
        }
            else{
              
            Files.copy(sourFile.toPath(), desFile.toPath(),StandardCopyOption.COPY_ATTRIBUTES,StandardCopyOption.REPLACE_EXISTING);
            }
            String imagePath = desFile.getCanonicalPath();
            // String a="\"";
             String b="/";
             IAPS_Loc.setText(imagePath);
            imagePath= imagePath.replace("\\",b);
            IPAString=imagePath;
             System.out.println(imagePath);
            }
        } catch (IOException ex) {
            System.out.println(ex);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        try {
            // TODO add your handling code here:
               int i=JOptionPane.showConfirmDialog(this,"Update SCD SDS scanned image will replace the current scanned image. Do you want to Continue?","Update Legacy",JOptionPane.YES_NO_OPTION);
               
            if (i==0) {
            JFileChooser chooser=new JFileChooser();
            chooser.showOpenDialog(this);
            File sFile=chooser.getSelectedFile();
            //BufferedImage bufferedImage=ImageIO.read(sFile);
            Image image=ImageIO.read(sFile);
            //Image myImage=image.getScaledInstance(161, 151,Image.SCALE_FAST);
            
            
            File sourFile=new File(sFile.getAbsolutePath());
           File desFile =new File(System.getProperty("user.dir")+"\\\\legacy\\\\"+f_name.getText()+Lname.getText()+M_Name.getText()+"SDCSCS"+".jpg");
       
            if (desFile.exists()) {
                    System.out.println("file exist");
             Files.copy(sourFile.toPath(), desFile.toPath(),StandardCopyOption.COPY_ATTRIBUTES,StandardCopyOption.REPLACE_EXISTING);
        }
            else{
              
            Files.copy(sourFile.toPath(), desFile.toPath(),StandardCopyOption.COPY_ATTRIBUTES,StandardCopyOption.REPLACE_EXISTING);
            }
            String imagePath = desFile.getCanonicalPath();
            // String a="\"";
             String b="/";
             SDCSCS_Loc.setText(imagePath);
            imagePath= imagePath.replace("\\",b);
            SDCSDString=imagePath;
             System.out.println(imagePath);
            }
        } catch (IOException ex) {
            System.out.println(ex);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void dateReCPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_dateReCPropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_dateReCPropertyChange
 String imagePath="";
 boolean update=false;
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here: if (Lname.getText().equals("")) {
        int a=JOptionPane.showConfirmDialog(this,"Recent photo will be updated. Do you want to continue?","Replace Photo",JOptionPane.YES_NO_OPTION);
        if (a==0) {
            
        if (Lname.getText().equals("")) {
            JOptionPane.showMessageDialog(this,"Last name required to continue");
        }
        else{
        try {
            if (!update) {
                 JFileChooser chooser=new JFileChooser();
                   chooser.showOpenDialog(this);
                File sFile=chooser.getSelectedFile();
            //BufferedImage bufferedImage=ImageIO.read(sFile);
            Image image=ImageIO.read(sFile);
            Image myImage=image.getScaledInstance(200,200,Image.SCALE_FAST);
           
            
            File sourFile=new File(sFile.getAbsolutePath());
            //File desFile =new File("C:\\Users\\JAMIEXXX3\\Documents\\sample\\5.jpg");
      
            //Files.copy(sourFile.toPath(), desFile.toPath());
      
              DBConnection.init();
    Connection c=DBConnection.getConnection();
    PreparedStatement ps;
    ResultSet rs;
    ps=c.prepareStatement("Select * from  informant_info");
    rs=ps.executeQuery();
    int i=1;
                while (rs.next()) {                    
                    i++;
                }
        
                if (f_name.getText().equals("") && Lname.getText().equals("")) {
                    JOptionPane.showMessageDialog(this,"To continue supply information before attaching image.");
                }
                else{
                           PictureView.setIcon(new ImageIcon(myImage));
        File desFile =new File(System.getProperty("user.dir")+"\\\\BIN_PIC\\\\"+f_name.getText()+Lname.getText()+M_Name.getText()+".jpg");
      
                if (desFile.exists()) {
                    System.out.println("file exist");
             Files.copy(sourFile.toPath(), desFile.toPath(),StandardCopyOption.COPY_ATTRIBUTES,StandardCopyOption.REPLACE_EXISTING);
               ImageFilePath.setText(imagePath);   
                 System.out.println(desFile.getAbsolutePath());
             imagePath=desFile.getCanonicalPath();
            // String a="\"";
             String b="/";
            imagePath= imagePath.replace("\\",b);
             System.out.println(imagePath);
             ImageFilePath.setText(imagePath);    
            i=0;
                }
                else{
        
            Files.copy(sourFile.toPath(), desFile.toPath());
             PictureView.setIcon(new ImageIcon(myImage));  
             System.out.println(desFile.getAbsolutePath());
             imagePath=desFile.getCanonicalPath();
            // String a="\"";
             String b="/";
            imagePath= imagePath.replace("\\",b);
             System.out.println(imagePath);
             ImageFilePath.setText(imagePath);    
            i=0;
                
            }
                }
            }
            else{
                
          JOptionPane.showConfirmDialog(this, "Updating Legacy Profile Photo ", "You sure you what to update Legacy profile photo",JOptionPane.YES_NO_OPTION);
                
                JFileChooser chooser=new JFileChooser();
               chooser.showOpenDialog(this);
            File sFile=chooser.getSelectedFile();
           // BufferedImage bufferedImage=ImageIO.read(sFile);
            Image image=ImageIO.read(sFile);
            Image myImage=image.getScaledInstance(200,200,Image.SCALE_FAST);
           
            
            File sourFile=new File(sFile.getAbsolutePath());
           
             PictureView.setIcon(new ImageIcon(myImage));
        
    
            //System.out.println("int i value  "+i+"");
             File desFile =new File(System.getProperty("user.dir")+"\\BIN_PIC\\"+f_name.getText()+Lname.getText()+M_Name.getText()+".jpg");
      
            Files.copy(sourFile.toPath(), desFile.toPath(),StandardCopyOption.COPY_ATTRIBUTES,StandardCopyOption.REPLACE_EXISTING);
             imagePath=desFile.getCanonicalPath();
            
           ////  PictureView.setIcon(new ImageIcon(myImage));  
           //  System.out.println(desFile.getAbsolutePath());
            // imagePath=desFile.getCanonicalPath();
            // String a="\"";
             String b="/";
            imagePath= imagePath.replace("\\",b);
             System.out.println(imagePath);
             ImageFilePath.setText(imagePath);
            
            
            
            
            
            
            
           // i=0;
            
            
            }
            
       
           } catch (HeadlessException | IOException | SQLException e) {
            
               System.out.println(e);
              ImageFilePath.setText(imagePath);
        }
        }
        }
    }//GEN-LAST:event_jButton3ActionPerformed
public void SaveLegacy() throws ParseException{
    try {
        DBConnection.init();
        Connection c =DBConnection.getConnection();
        PreparedStatement ps;
        ResultSet rs;
        
         Calendar cal=  Calendar.getInstance();
    cal.getTime();
    SimpleDateFormat date=new SimpleDateFormat("yyyy/MM/d");
     SimpleDateFormat time=new SimpleDateFormat("hh:mm:ss");
   
        String Date = date.format(cal.getTime());
        String Time = time.format(cal.getTime());
        
        
        SimpleDateFormat df = new SimpleDateFormat("yyyy/MM/d");
        String dateRec = String.valueOf(df.format(dateReC.getDate()));
          
            System.out.println(dateRec);
            
        
        ps=c.prepareStatement("Insert into informant_info (F_Name,M_Name,L_Name,Alias,Iden_Char,IAPS_loc,SDCSDS_loc,B_PAdrress,infoType,D_Recuitment,E_Date,E_Time)values"+"('"+f_name.getText()+"','"+M_Name.getText()+"','"+Lname.getText()+"','"+alias.getText()+"','"+Inden_char.getText()+"','"+IPAString+"','"+SDCSDString+"','"+P_Barangay.getSelectedItem().toString()+"','"+"Legacy"+"','"+dateRec+"','"+Date+"','"+Time+"')");
        ps.execute(); 
        JOptionPane.showMessageDialog(this, "Legacy informant saved");
        JOptionPane.showMessageDialog(this, "All Fields will be cleared");
        ClearFields();
    } catch (SQLException ex) {
        System.out.println(ex);
    }


}


 public boolean VerifyINput(){
     try {
          DBConnection.init();
    Connection c=DBConnection.getConnection();
    PreparedStatement ps;
    ResultSet rs;
    ps=c.prepareStatement("Select * from  informant_info where F_name='"+f_name.getText()+"' and M_Name='"+M_Name.getText()+"' and L_Name='"+Lname.getText()+"'");
    rs=ps.executeQuery();
         if (rs.next()) {
            
          //   if (rs.getString(2).equals(f_name.getText()) && rs.getString(3).equals(M_Name.getText()) && rs.getString(4).equals(Lname.getText())) {
                   JOptionPane.showMessageDialog(this,"Informant profile duplication ");
                    return true;
          //   }
              
         
         }
       
     } catch (SQLException | NumberFormatException | HeadlessException e) {
         System.out.println(e);
     }
        return false;
 
 }

public void ClearFields(){
f_name.setText(null);
M_Name.setText(null);
Lname.setText(null);
alias.setText(null);
Inden_char.setText(null);
IAPS_Loc.setText(null);
SDCSCS_Loc.setText(null);
P_Barangay.setSelectedIndex(0);
f_name.requestFocus();
dateReC.setDate(null);

}

public  void LoadLegacyProfile() {
 try{
    
    DBConnection.init();
    Connection c=DBConnection.getConnection();
    PreparedStatement ps;
    ResultSet rs;
    ps=c.prepareStatement("Select * from  informant_info where idInformant_info='"+ID+"'");
    rs=ps.executeQuery();
    while(rs.next()){
     
     f_name.setText(rs.getString(2));
     M_Name.setText(rs.getString(3));
     Lname.setText(rs.getString(4));
     Date dateR = new SimpleDateFormat("yyyy-MM-d").parse(rs.getString(51));
     dateReC.setDate(dateR);
     alias.setText(rs.getString(10));
     Inden_char.setText(rs.getString(26));
     IAPS_Loc.setText(rs.getString(63));
     P_Barangay.setSelectedItem(rs.getString(17));
     SDCSCS_Loc.setText(rs.getString(64));
       System.out.println(rs.getString(42));
            File FImage=new File(rs.getString(42));
            ImageFilePath.setText(rs.getString(42));
 
            Image image=ImageIO.read(FImage);
            Image myImage=image.getScaledInstance(200,200,Image.SCALE_FAST);
            PictureView.setIcon(new ImageIcon(myImage));
      
           
            //JOptionPane.showMessageDialog(this, ex);
          
             
            
        
   }
   
    
    } 
    catch(SQLException  | ParseException | IOException e){
        System.out.println(e);
       // JOptionPane.showMessageDialog(this, e);
      PictureView.setText("        No photo available");
            PictureView.setIcon(null);
    }
       

}

public  void UpdateLegacy(){
    try {
        DBConnection.init();
        Connection c=DBConnection.getConnection();
        PreparedStatement ps;
        ps=c.prepareStatement("Update  informant_info set idInformant_info=(?),F_Name=(?),M_Name=(?),L_Name=(?),Alias=(?),Iden_Char=(?),D_Recuitment=(?),IAPS_loc=(?),SDCSDS_loc=(?),B_PAdrress=(?),PictureFilePath=(?) where idInformant_info like(?)");
        ps.setString(1,String.valueOf(ID));
        ps.setString(2, f_name.getText());
        ps.setString(3, M_Name.getText());
        ps.setString(4, Lname.getText());
        ps.setString(5, alias.getText());
        ps.setString(6, Inden_char.getText());
        SimpleDateFormat df = new SimpleDateFormat("yyyy-MM-dd");
           String dateString=String.valueOf(df.format(dateReC.getDate()));
            System.out.println("date "+dateString);
        ps.setString(7, dateString);
        ps.setString(8, IAPS_Loc.getText());
        ps.setString(9,SDCSCS_Loc.getText());
        ps.setString(10,P_Barangay.getSelectedItem().toString());
        System.out.println(P_Barangay.getSelectedItem().toString());
        ps.setString(11,ImageFilePath.getText());
        ps.setString(12,String.valueOf(ID));
        ps.executeUpdate();
        JOptionPane.showMessageDialog(this,"Succesfully updated legacy informant");
    } catch (SQLException ex) {
        System.out.println(ex);    
    }
}
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel IAPS_Loc;
    private javax.swing.JLabel ImageFilePath;
    public javax.swing.JTextField Inden_char;
    private javax.swing.JTextField Lname;
    private javax.swing.JTextField M_Name;
    private javax.swing.JComboBox P_Barangay;
    private javax.swing.JLabel PictureView;
    private javax.swing.JLabel SDCSCS_Loc;
    private javax.swing.JTextField alias;
    private com.toedter.calendar.JDateChooser dateReC;
    private javax.swing.JTextField f_name;
    public javax.swing.JButton jButton1;
    public javax.swing.JButton jButton2;
    public javax.swing.JButton jButton3;
    public javax.swing.JButton jButton4;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel60;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    // End of variables declaration//GEN-END:variables
}
