/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package bin;

import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.StandardCopyOption;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.Format;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.Timer;
import java.util.TimerTask;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Sammy Guergachi <sguergachi at gmail.com>
 */
public class ViewALLDETAILS extends javax.swing.JFrame {

    DefaultTableModel model = new DefaultTableModel();
    String imagePath;
    public int ID;
    DateFormat df;
    String date1, dateRec;
    String dateString;
    Statictics stat;
    String Date, Time, dateS_Bdate;
    public boolean isUser;
    //ImageIcon default =new ImageIcon();
    boolean update = false;
    AddChild addChild;
    public int childID;
    public File sFileWeb;
    String IPAString;
    String SDCSDString;

    /**
     * Creates new form AddNewRecord
     */
    public ViewALLDETAILS() {
        initComponents();
        model = (DefaultTableModel) jTable2.getModel();
        LoadNameOnlyData();
        RefreshTime();
        LoadChild();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel13 = new javax.swing.JPanel();
        jLabel47 = new javax.swing.JLabel();
        S_Codification = new javax.swing.JTextField();
        jLabel48 = new javax.swing.JLabel();
        Status_Codification = new javax.swing.JComboBox();
        jLabel60 = new javax.swing.JLabel();
        dateReC = new com.toedter.calendar.JDateChooser();
        jLabel28 = new javax.swing.JLabel();
        alias = new javax.swing.JTextField();
        jPanel10 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        Mode_Contanct = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        Mobile_Num = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        Email = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        ContactPersonm = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        Mobile_Contact_Per = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        Category1 = new javax.swing.JTextField();
        Type1 = new javax.swing.JTextField();
        jLabel70 = new javax.swing.JLabel();
        jLabel71 = new javax.swing.JLabel();
        Threat1 = new javax.swing.JTextField();
        jLabel72 = new javax.swing.JLabel();
        jLabel73 = new javax.swing.JLabel();
        Handler2 = new javax.swing.JTextField();
        jPanel7 = new javax.swing.JPanel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        f_name = new javax.swing.JTextField();
        M_Name = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        Lname = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        age = new javax.swing.JTextField();
        jLabel23 = new javax.swing.JLabel();
        nationalilty = new javax.swing.JTextField();
        jLabel24 = new javax.swing.JLabel();
        religion = new javax.swing.JTextField();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        education = new javax.swing.JTextField();
        jLabel27 = new javax.swing.JLabel();
        place_birth = new javax.swing.JTextField();
        jLabel29 = new javax.swing.JLabel();
        presentADD = new javax.swing.JTextField();
        jLabel30 = new javax.swing.JLabel();
        PermaentADD = new javax.swing.JTextField();
        jLabel31 = new javax.swing.JLabel();
        ZipCode = new javax.swing.JTextField();
        jLabel32 = new javax.swing.JLabel();
        CBgender = new javax.swing.JComboBox();
        jLabel56 = new javax.swing.JLabel();
        date = new com.toedter.calendar.JDateChooser();
        cb_maritals_status = new javax.swing.JComboBox();
        InformantID = new javax.swing.JLabel();
        jLabel49 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel61 = new javax.swing.JLabel();
        jLabel62 = new javax.swing.JLabel();
        BirthCountry = new javax.swing.JTextField();
        Province = new javax.swing.JTextField();
        CbCityMun = new javax.swing.JComboBox();
        P_Barangay = new javax.swing.JComboBox();
        Permanet_Barangay = new javax.swing.JComboBox();
        jLabel50 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        face = new javax.swing.JTextField();
        jLabel33 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        Hair = new javax.swing.JTextField();
        jLabel35 = new javax.swing.JLabel();
        jLabel36 = new javax.swing.JLabel();
        Complexion = new javax.swing.JComboBox();
        jLabel37 = new javax.swing.JLabel();
        Eyes = new javax.swing.JTextField();
        Build = new javax.swing.JTextField();
        jLabel38 = new javax.swing.JLabel();
        Body = new javax.swing.JTextField();
        jLabel39 = new javax.swing.JLabel();
        Gen_Apprerance = new javax.swing.JTextField();
        jLabel40 = new javax.swing.JLabel();
        jLabel41 = new javax.swing.JLabel();
        Inden_char = new javax.swing.JTextField();
        Height = new javax.swing.JTextField();
        jLabel42 = new javax.swing.JLabel();
        jPanel14 = new javax.swing.JPanel();
        CodeName = new javax.swing.JTextField();
        jLabel51 = new javax.swing.JLabel();
        OperationProject = new javax.swing.JTextField();
        jLabel53 = new javax.swing.JLabel();
        pydonym = new javax.swing.JTextField();
        jLabel58 = new javax.swing.JLabel();
        jLabel59 = new javax.swing.JLabel();
        target = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        CriminalRecords = new javax.swing.JTextArea();
        jLabel67 = new javax.swing.JLabel();
        Spouse = new javax.swing.JTextField();
        jLabel57 = new javax.swing.JLabel();
        jLabel44 = new javax.swing.JLabel();
        dateSBdate = new com.toedter.calendar.JDateChooser();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jPanel9 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        Mil_Services = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        Other_Org = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        Fore_training = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        Employement = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        position = new javax.swing.JTextField();
        Add_emloyer = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        Termination_date = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        TIN = new javax.swing.JTextField();
        jLabel55 = new javax.swing.JLabel();
        jLabel43 = new javax.swing.JLabel();
        position1 = new javax.swing.JTextField();
        jLabel45 = new javax.swing.JLabel();
        IAPS_Loc = new javax.swing.JLabel();
        jLabel46 = new javax.swing.JLabel();
        SDCSCS_Loc = new javax.swing.JLabel();
        jButton8 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        ImageFilePath = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        jDesktopPane1 = new javax.swing.JDesktopPane();
        PictureView = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jPanel11 = new javax.swing.JPanel();
        Update_Button = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Update All Details");
        setBounds(new java.awt.Rectangle(152, 135, 0, 0));
        setResizable(false);

        jPanel13.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel47.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel47.setText("Source of Codification");

        S_Codification.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jLabel48.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel48.setText("Status");

        Status_Codification.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        Status_Codification.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select Status", "Active", "Non-Active", " " }));

        jLabel60.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel60.setText("*Date of Recruitment");

        dateReC.setDateFormatString("MMMMM d, yyyy");
        dateReC.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        dateReC.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                dateReCPropertyChange(evt);
            }
        });

        jLabel28.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel28.setText("*Alias");

        alias.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel47)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel28)
                            .addComponent(jLabel60)))
                    .addComponent(jLabel48))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(dateReC, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Status_Codification, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(alias)
                    .addComponent(S_Codification, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel47, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(S_Codification, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel48)
                    .addComponent(Status_Codification, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(dateReC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel60))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel28)
                    .addComponent(alias, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10))
        );

        jPanel10.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel12.setText("Contact Information");

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel13.setText("Mode of Contact");

        Mode_Contanct.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jLabel14.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel14.setText("Mobile Number");

        Mobile_Num.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jLabel15.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel15.setText("Email Address");

        Email.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jLabel16.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel16.setText("Person to Contact in Case of Emergeny");

        ContactPersonm.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jLabel17.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel17.setText("Mobile Number");

        Mobile_Contact_Per.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel10Layout.createSequentialGroup()
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ContactPersonm)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel10Layout.createSequentialGroup()
                                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel14)
                                    .addComponent(jLabel15))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(Mobile_Num, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Email, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel10Layout.createSequentialGroup()
                                .addComponent(jLabel17)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Mobile_Contact_Per, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel10Layout.createSequentialGroup()
                                .addComponent(jLabel13)
                                .addGap(18, 18, 18)
                                .addComponent(Mode_Contanct, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGap(284, 284, 284))
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addComponent(jLabel16)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addComponent(jLabel12)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(Mode_Contanct, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Mobile_Num, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Email, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel16)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ContactPersonm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(Mobile_Contact_Per, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 5, Short.MAX_VALUE))
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        Category1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        Type1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jLabel70.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel70.setText("Threat");

        jLabel71.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel71.setText("Category");

        Threat1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jLabel72.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel72.setText("Type");

        jLabel73.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel73.setText("Handler");

        Handler2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel73)
                        .addGap(26, 26, 26)
                        .addComponent(Handler2, javax.swing.GroupLayout.DEFAULT_SIZE, 247, Short.MAX_VALUE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel71)
                        .addGap(18, 18, 18)
                        .addComponent(Category1))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel72)
                            .addComponent(jLabel70))
                        .addGap(30, 30, 30)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(Threat1, javax.swing.GroupLayout.DEFAULT_SIZE, 247, Short.MAX_VALUE)
                            .addComponent(Type1))))
                .addGap(10, 37, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(0, 7, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Threat1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel70))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Type1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel72))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Category1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel71))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Handler2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel73))
                .addContainerGap())
        );

        jPanel7.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel18.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel18.setText("Basic Information");

        jLabel19.setText("*First Name");

        f_name.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        M_Name.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jLabel20.setText("*Middle Name");

        Lname.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        Lname.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                LnameCaretUpdate(evt);
            }
        });
        Lname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LnameActionPerformed(evt);
            }
        });

        jLabel21.setText("*Last Name");

        jLabel22.setText("*Birth Date");

        age.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jLabel23.setText("Age");

        nationalilty.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        nationalilty.setText("Filipino");

        jLabel24.setText("Nationality");

        religion.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jLabel25.setText("Religion");

        jLabel26.setText("Civil Status");

        education.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jLabel27.setText("Education");

        place_birth.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jLabel29.setText(" Birth Province");

        presentADD.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        presentADD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                presentADDActionPerformed(evt);
            }
        });

        jLabel30.setText("Present Address");

        PermaentADD.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        PermaentADD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PermaentADDActionPerformed(evt);
            }
        });

        jLabel31.setText("Permanent Address");

        ZipCode.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        ZipCode.setText("8009");
        ZipCode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ZipCodeActionPerformed(evt);
            }
        });

        jLabel32.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel32.setText("Zip Code");

        CBgender.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        CBgender.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select Gender", "MALE", "FEMALE", " " }));

        jLabel56.setText("Gender");

        date.setDateFormatString("MMMMM d, yyyy");
        date.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        date.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                datePropertyChange(evt);
            }
        });

        cb_maritals_status.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select Status", "Single", "Married", "Widowed", "Live-In" }));
        cb_maritals_status.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cb_maritals_statusItemStateChanged(evt);
            }
        });

        InformantID.setToolTipText("");
        InformantID.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel49.setText("Informant ID");

        jLabel9.setText("Province");

        jLabel61.setText("City/Municipality");

        jLabel62.setText("Birth Country");

        BirthCountry.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        BirthCountry.setText("Philippines");
        BirthCountry.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BirthCountryActionPerformed(evt);
            }
        });

        Province.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        Province.setText("Davao del Sur");
        Province.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ProvinceActionPerformed(evt);
            }
        });

        CbCityMun.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        CbCityMun.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Sulop", "Santa Cruz", "Digos", "Matanao", "Magsaysay", "Bansalan Hagunoy", "Padada", "Kiblawan", "Malalag", "Santa Maria", "Malita", "Don Marcelino", "Jose Abad Santos", "Sarangani", "Davao City" }));
        CbCityMun.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                CbCityMunItemStateChanged(evt);
            }
        });
        CbCityMun.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CbCityMunActionPerformed(evt);
            }
        });

        P_Barangay.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        P_Barangay.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select  Barangay", "Balasinon", "Buguis", "Carre", "Clib", "Harada Butai", "Katipunan", "Kiblagon", "Labon", "Laperas", "Lapla", "Litos", "Luparan", "Mckinley", "New Cebu", "Osmeña", "Palili", "Parame", "Poblacion", "Roxas", "Solongvale", "Tagolilong", "Tala-o", "Talas", "Tanwalang", "Waterfall" }));

        Permanet_Barangay.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        Permanet_Barangay.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select  Barangay", "Balasinon", "Buguis", "Carre", "Clib", "Harada Butai", "Katipunan", "Kiblagon", "Labon", "Laperas", "Lapla", "Litos", "Luparan", "Mckinley", "New Cebu", "Osmeña", "Palili", "Parame", "Poblacion", "Roxas", "Solongvale", "Tagolilong", "Tala-o", "Talas", "Tanwalang", "Waterfall" }));

        jLabel50.setText("You may update the Profile Sheet and Source Data Card in the Affiliation-Skills-Employment tab.");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel21)
                            .addComponent(jLabel22)
                            .addComponent(jLabel19)
                            .addComponent(jLabel20)
                            .addComponent(jLabel25)
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(jLabel23)))
                        .addGap(38, 38, 38)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(M_Name)
                            .addComponent(Lname)
                            .addComponent(f_name, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel7Layout.createSequentialGroup()
                                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(date, javax.swing.GroupLayout.DEFAULT_SIZE, 151, Short.MAX_VALUE)
                                    .addComponent(age, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(religion, javax.swing.GroupLayout.Alignment.LEADING))
                                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanel7Layout.createSequentialGroup()
                                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel7Layout.createSequentialGroup()
                                                .addGap(19, 19, 19)
                                                .addComponent(jLabel24))
                                            .addGroup(jPanel7Layout.createSequentialGroup()
                                                .addGap(18, 18, 18)
                                                .addComponent(jLabel56, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGap(6, 6, 6)
                                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(nationalilty, javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(CBgender, javax.swing.GroupLayout.Alignment.TRAILING, 0, 164, Short.MAX_VALUE)))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel26)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 5, Short.MAX_VALUE)
                                        .addComponent(cb_maritals_status, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel30)
                            .addComponent(jLabel27))
                        .addGap(25, 25, 25)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addComponent(presentADD)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(P_Barangay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(education)))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jLabel31)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(PermaentADD)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Permanet_Barangay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addComponent(jLabel18)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel49)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(InformantID, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel50))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel61, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addGap(5, 5, 5)
                                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel29)
                                    .addComponent(jLabel62)
                                    .addComponent(jLabel9))))
                        .addGap(20, 20, 20)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(place_birth)
                            .addComponent(BirthCountry)
                            .addComponent(Province)
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addComponent(CbCityMun, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(7, 7, 7)
                                .addComponent(jLabel32)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ZipCode)))))
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel18)
                        .addComponent(jLabel49))
                    .addComponent(InformantID, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19)
                    .addComponent(f_name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20)
                    .addComponent(M_Name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel21)
                    .addComponent(Lname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel22)
                            .addComponent(CBgender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel56))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel23)
                            .addComponent(age, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(nationalilty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel24)))
                    .addComponent(date, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(religion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cb_maritals_status, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel26))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(education, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel27)))
                    .addComponent(jLabel25))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel30)
                    .addComponent(presentADD, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(P_Barangay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel31)
                    .addComponent(PermaentADD, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Permanet_Barangay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(5, 5, 5)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel61)
                    .addComponent(CbCityMun, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel32)
                    .addComponent(ZipCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Province, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BirthCountry, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel62))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(place_birth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel29, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel50)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, 365, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Basic Information", jPanel1);

        jPanel8.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        face.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                faceActionPerformed(evt);
            }
        });

        jLabel33.setText("Face");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setText("Description");

        jLabel34.setText("Hair");

        Hair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HairActionPerformed(evt);
            }
        });

        jLabel36.setText("Complexion");

        Complexion.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select Complexion", "Dark", "Fair", "Medium" }));

        jLabel37.setText("Eyes");

        Eyes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EyesActionPerformed(evt);
            }
        });

        Build.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BuildActionPerformed(evt);
            }
        });

        jLabel38.setText("Build");

        Body.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BodyActionPerformed(evt);
            }
        });

        jLabel39.setText("Body");

        Gen_Apprerance.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Gen_AppreranceActionPerformed(evt);
            }
        });

        jLabel40.setText("General Apperance");

        jLabel41.setText("Identifying Characteristics");

        jLabel42.setText("Height");

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                        .addComponent(jLabel35)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel8Layout.createSequentialGroup()
                                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel41)
                                    .addComponent(jLabel40, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel42))
                                .addGap(4, 4, 4)
                                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(Inden_char, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Gen_Apprerance, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Height, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel8Layout.createSequentialGroup()
                                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel8Layout.createSequentialGroup()
                                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel33)
                                            .addComponent(jLabel36)
                                            .addComponent(jLabel34))
                                        .addGap(75, 75, 75))
                                    .addGroup(jPanel8Layout.createSequentialGroup()
                                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel37, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jLabel38, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jLabel39, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(Body)
                                    .addComponent(Build)
                                    .addComponent(Hair)
                                    .addComponent(Complexion, 0, 248, Short.MAX_VALUE)
                                    .addComponent(Eyes)
                                    .addComponent(face))))
                        .addGap(80, 80, 80))))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel33)
                    .addComponent(face, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Hair, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel34))
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel36)
                            .addComponent(Complexion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(14, 14, 14)
                        .addComponent(jLabel35))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel37)
                            .addComponent(Eyes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel38)
                    .addComponent(Build, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel39)
                    .addComponent(Body, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel40)
                    .addComponent(Gen_Apprerance, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel41)
                    .addComponent(Inden_char, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 7, Short.MAX_VALUE)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel42)
                    .addComponent(Height, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel14.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel51.setText("Code Name");

        jLabel53.setText("Operation Project");

        jLabel58.setText("Pseudonym");

        jLabel59.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel59.setText("Target");

        target.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addComponent(jLabel51)
                        .addGap(70, 70, 70)
                        .addComponent(CodeName))
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel59)
                            .addComponent(jLabel58))
                        .addGap(70, 70, 70)
                        .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(pydonym)
                            .addComponent(target)))
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addComponent(jLabel53)
                        .addGap(40, 40, 40)
                        .addComponent(OperationProject)))
                .addContainerGap())
        );
        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel51)
                    .addComponent(CodeName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel53)
                    .addComponent(OperationProject, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel58)
                    .addComponent(pydonym, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel59)
                    .addComponent(target, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 20, Short.MAX_VALUE))
        );

        jScrollPane2.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);
        jScrollPane2.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        CriminalRecords.setColumns(20);
        CriminalRecords.setLineWrap(true);
        CriminalRecords.setRows(5);
        jScrollPane2.setViewportView(CriminalRecords);

        jLabel67.setText("Criminal Case");

        Spouse.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jLabel57.setText("Spouse Name");

        jLabel44.setText("Birth Date");

        dateSBdate.setDateFormatString("MMMMMM d, yyyy ");
        dateSBdate.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        dateSBdate.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                dateSBdatePropertyChange(evt);
            }
        });

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Child ID", "Name", "Birth Date"
            }
        ));
        jTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable2MouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(jTable2);

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/bin/images/Add_1.png"))); // NOI18N
        jButton2.setText("Add Child");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/bin/images/Delete.png"))); // NOI18N
        jButton5.setText("Removed Child");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/bin/images/Accept.png"))); // NOI18N
        jButton7.setText("Update Child");
        jButton7.setPreferredSize(new java.awt.Dimension(139, 41));
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, 406, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(1, 1, 1)
                                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton5))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(jLabel57)
                                        .addGap(150, 150, 150)
                                        .addComponent(jLabel44))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(Spouse, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(dateSBdate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 429, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addContainerGap())
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 429, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel67))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(12, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel67)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel57)
                            .addComponent(jLabel44))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Spouse, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dateSBdate, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 90, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton5)
                            .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(1, 1, 1))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Description", jPanel2);

        jPanel9.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel3.setText("Affilation-Skills- Employment");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel4.setText("Military Services");

        Mil_Services.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel5.setText("Other Organizations");

        Other_Org.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel6.setText("Foreign Training");

        Fore_training.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel7.setText("Employment");

        Employement.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel8.setText("Occupation");

        position.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        Add_emloyer.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel10.setText("Name & Address of Employer");

        Termination_date.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel11.setText("Termination Date");

        TIN.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jLabel55.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel55.setText("TIN or NR");

        jLabel43.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel43.setText("Position");

        position1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel9Layout.createSequentialGroup()
                                .addComponent(jLabel55)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(TIN, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel9Layout.createSequentialGroup()
                                .addComponent(jLabel11)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(Termination_date, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel9Layout.createSequentialGroup()
                                .addComponent(jLabel10)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(Add_emloyer, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel9Layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(position, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel9Layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(Employement, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel9Layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(Other_Org, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel9Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(Mil_Services, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel9Layout.createSequentialGroup()
                                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel43)
                                    .addComponent(jLabel6))
                                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel9Layout.createSequentialGroup()
                                        .addGap(78, 78, 78)
                                        .addComponent(position1))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(Fore_training, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGap(18, 18, 18))))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(Mil_Services, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(Other_Org, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(Fore_training, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(Employement, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(position, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(position1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel43))
                .addGap(5, 5, 5)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Add_emloyer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Termination_date, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(TIN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel55))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel45.setText("*Profile Sheet");

        IAPS_Loc.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        IAPS_Loc.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel46.setText("*Source Data Card");

        SDCSCS_Loc.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        SDCSCS_Loc.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jButton8.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jButton8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/bin/images/About.png"))); // NOI18N
        jButton8.setText("Update Profile Sheet");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jButton4.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/bin/images/Information.png"))); // NOI18N
        jButton4.setText("Update Source Data Card");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel45)
                            .addComponent(IAPS_Loc, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(19, 19, 19)
                                .addComponent(jLabel46))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(SDCSCS_Loc, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))))
                .addContainerGap(388, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel45)
                    .addComponent(jLabel46))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(SDCSCS_Loc, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(IAPS_Loc, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton8)
                    .addComponent(jButton4))
                .addGap(40, 40, 40))
        );

        jTabbedPane1.addTab("Affiiliation-Skills- Employment", jPanel3);

        jPanel6.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel1.setText("Recent Photo");

        jButton3.setText("Update Photo");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jDesktopPane1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jDesktopPane1.setMaximumSize(new java.awt.Dimension(161, 151));

        PictureView.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        PictureView.setForeground(new java.awt.Color(255, 0, 0));
        PictureView.setText("jLabel50");

        javax.swing.GroupLayout jDesktopPane1Layout = new javax.swing.GroupLayout(jDesktopPane1);
        jDesktopPane1.setLayout(jDesktopPane1Layout);
        jDesktopPane1Layout.setHorizontalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jDesktopPane1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(PictureView, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jDesktopPane1Layout.setVerticalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jDesktopPane1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(PictureView, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jDesktopPane1.setLayer(PictureView, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jButton1.setText("Take Photo");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(67, 67, 67))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                        .addComponent(ImageFilePath, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                        .addComponent(jDesktopPane1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(jDesktopPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(ImageFilePath, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel11.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        Update_Button.setIcon(new javax.swing.ImageIcon(getClass().getResource("/bin/images/Apply.png"))); // NOI18N
        Update_Button.setText("Update");
        Update_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Update_ButtonActionPerformed(evt);
            }
        });

        jButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/bin/images/Close.png"))); // NOI18N
        jButton6.setText("Close");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel11Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(Update_Button, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(46, 46, 46))
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Update_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 865, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(5, 5, 5))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(10, 10, 10)
                        .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 475, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void faceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_faceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_faceActionPerformed

    private void HairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HairActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_HairActionPerformed

    private void EyesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EyesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_EyesActionPerformed

    private void BuildActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BuildActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_BuildActionPerformed

    private void BodyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BodyActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_BodyActionPerformed

    private void Gen_AppreranceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Gen_AppreranceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Gen_AppreranceActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        System.out.println(this.getBounds());
        PictureView.setIcon(null);

        this.dispose();
    }//GEN-LAST:event_jButton6ActionPerformed

    private void Update_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Update_ButtonActionPerformed
        // TODO add your handling code here:

        UPDATEOthers();
        LogUpdateed();
        if (rec != null) {
            try {
                rec.LoadNameOnlyData();
            } catch (ParseException ex) {
                System.out.println(ex);
            }
        }

        if (stat != null) {
            stat.LoadNameToUPDATE_INFOMANT_NUMBER(stat.LoadNames());
            stat.LoadNameOnlyData();
        }

    }//GEN-LAST:event_Update_ButtonActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:this
        if (Lname.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Last name required to continue");
        } else {
            System.out.println(update);
            try {
                if (update) {
                    JFileChooser chooser = new JFileChooser();
                    chooser.showOpenDialog(this);
                    File sFile = chooser.getSelectedFile();
                    BufferedImage bufferedImage = ImageIO.read(sFile);
                    Image image = ImageIO.read(sFile);
                    Image myImage = image.getScaledInstance(161, 151, Image.SCALE_FAST);

                    File sourFile = new File(sFile.getAbsolutePath());
                    //File desFile =new File("C:\\Users\\JAMIEXXX3\\Documents\\sample\\5.jpg");

                    //Files.copy(sourFile.toPath(), desFile.toPath());
                    PictureView.setIcon(new ImageIcon(myImage));
                    DBConnection.init();
                    Connection c = DBConnection.getConnection();
                    PreparedStatement ps;
                    ResultSet rs;
                    ps = c.prepareStatement("Select * from  informant_info");
                    rs = ps.executeQuery();
                    int i = 1;
                    while (rs.next()) {
                        i++;
                    }

                    File desFile = new File(System.getProperty("user.dir") + "\\BIN_PIC\\" + f_name.getText() + Lname.getText() + M_Name.getText() + ".jpg");

                    Files.copy(sourFile.toPath(), desFile.toPath());
                    PictureView.setIcon(new ImageIcon(myImage));
                    System.out.println(desFile.getAbsolutePath());
                    imagePath = desFile.getCanonicalPath();
                    // String a="\"";
                    String b = "/";
                    imagePath = imagePath.replace("\\", b);
                    System.out.println(imagePath);
                    ImageFilePath.setText(imagePath);

                    i = 0;

                } else {

                    //    JOptionPane.showOptionDialog(this, " ", "You sure you what to update Profile Photo", WIDTH, WIDTH, null,null , nationalilty);
                    int a = JOptionPane.showConfirmDialog(this, "Are you sure you want to update the Recent Photo?", "Update Recent Photo", JOptionPane.YES_NO_OPTION);
                    if (a == 0) {

                        JFileChooser chooser = new JFileChooser();
                        chooser.showOpenDialog(this);
                        File sFile = chooser.getSelectedFile();
                        // BufferedImage bufferedImage=ImageIO.read(sFile);
                        Image image = ImageIO.read(sFile);
                        Image myImage = image.getScaledInstance(161, 151, Image.SCALE_FAST);

                        File sourFile = new File(sFile.getAbsolutePath());

                        PictureView.setIcon(new ImageIcon(myImage));

                        //System.out.println("int i value  "+i+"");
                        File desFile = new File(System.getProperty("user.dir") + "\\BIN_PIC\\" + f_name.getText() + Lname.getText() + M_Name.getText() + ".jpg");

                        Files.copy(sourFile.toPath(), desFile.toPath(), StandardCopyOption.COPY_ATTRIBUTES, StandardCopyOption.REPLACE_EXISTING);
                        imagePath = desFile.getCanonicalPath();

                        String b = "/";
                        imagePath = imagePath.replace("\\", b);
                        System.out.println(imagePath);
                        ImageFilePath.setText(imagePath);

                    }
                }

            } catch (Exception e) {

                System.out.println(e);
                ImageFilePath.setText(imagePath);
            }
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    public void setpicture() throws IOException {
        try {

            Image image = ImageIO.read(sFileWeb);
            Image myImage = image.getScaledInstance(161, 151, Image.SCALE_FAST);

            File sourFile = new File(sFileWeb.getAbsolutePath());

            PictureView.setIcon(new ImageIcon(myImage));

            //System.out.println("int i value  "+i+"");
            File desFile = new File(System.getProperty("user.dir") + "\\BIN_PIC\\" + f_name.getText() + Lname.getText() + M_Name.getText() + ".jpg");

            Files.copy(sourFile.toPath(), desFile.toPath(), StandardCopyOption.COPY_ATTRIBUTES, StandardCopyOption.REPLACE_EXISTING);
            imagePath = desFile.getCanonicalPath();

            String b = "/";
            imagePath = imagePath.replace("\\", b);
            System.out.println(imagePath);
            ImageFilePath.setText(imagePath);

        } catch (IOException e) {
            System.out.println(e);
        }
    }
    private void dateReCPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_dateReCPropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_dateReCPropertyChange

    private void LnameCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_LnameCaretUpdate
        // TODO add your handling code here:

    }//GEN-LAST:event_LnameCaretUpdate

    private void LnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LnameActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_LnameActionPerformed

    private void presentADDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_presentADDActionPerformed
        // TODO add your handling code here
    }//GEN-LAST:event_presentADDActionPerformed

    private void PermaentADDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PermaentADDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PermaentADDActionPerformed

    private void ZipCodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ZipCodeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ZipCodeActionPerformed

    private void datePropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_datePropertyChange
        try {
            Calendar now = Calendar.getInstance();
            Calendar bday = Calendar.getInstance();
            //now.setTime(null);
            bday.setTime(date.getDate());
            int age1 = now.get(Calendar.YEAR) - bday.get(Calendar.YEAR);

            age.setText(String.valueOf(age1));

        } catch (Exception ex) {
            System.out.println(ex);
        }
    }//GEN-LAST:event_datePropertyChange

    private void cb_maritals_statusItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cb_maritals_statusItemStateChanged
        // TODO add your handling code here:
        if (cb_maritals_status.getSelectedItem().toString().equals("Single")) {
            Spouse.setText("N/A");
        } else if (cb_maritals_status.getSelectedItem().toString().equals("Married")) {
            if (Spouse.getText().equals("Single")) {
                Spouse.setText("");
            }
        }
    }//GEN-LAST:event_cb_maritals_statusItemStateChanged

    private void BirthCountryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BirthCountryActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_BirthCountryActionPerformed

    private void ProvinceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ProvinceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ProvinceActionPerformed

    private void CbCityMunItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_CbCityMunItemStateChanged
        // TODO add your handling code here:
        System.out.println("item Selected");
        switch (CbCityMun.getSelectedItem().toString()) {
            case "Santa Cruz":
                ZipCode.setText("8001");
                System.out.println("8001");
                break;
            case "Digos":
                ZipCode.setText("8002");
                break;
            case "Sulop":
                ZipCode.setText("8009");
                break;
            case "Matanao":
                ZipCode.setText("8003");
                break;
            case "Magsaysay":
                ZipCode.setText("8004");
                break;
            case "Bansalan":
                ZipCode.setText("8005");
                break;
            case "Hagunoy":
                ZipCode.setText("8006");
                break;
            case "Padada":
                ZipCode.setText("8007");
                break;
            case "Kiblawan":
                ZipCode.setText("8008");
                break;
            case "Malalag":
                ZipCode.setText("8010");
                break;
            case "Santa Maria":
                ZipCode.setText("8011");
                break;
            case "Malita":
                ZipCode.setText("8012");
                break;
            case "Don Marcelino":
                ZipCode.setText("8013");
                break;
            case "Jose Abad Santos":
                ZipCode.setText("8014");
                break;
            case "Sarangani":
                ZipCode.setText("8015");
                break;

        }

    }//GEN-LAST:event_CbCityMunItemStateChanged

    private void CbCityMunActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CbCityMunActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CbCityMunActionPerformed

    private void dateSBdatePropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_dateSBdatePropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_dateSBdatePropertyChange

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        if (addChild == null) {
            addChild = new AddChild(this);
            addChild.ChildName.requestFocus();
            addChild.ID = Integer.parseInt(InformantID.getText());
            addChild.isUpdate = false;
            addChild.setADD();
        }
        addChild.ID = Integer.parseInt(InformantID.getText());
        addChild.isUpdate = false;
        addChild.setADD();
        if (InformantID.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Save new informant to continue");
        } else {
            addChild.setVisible(true);
        }

    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        try {

            if (addChild == null) {
                addChild = new AddChild(this);
                addChild.ChildName.requestFocus();
                addChild.ID = childID;
                addChild.isUpdate = true;
                addChild.setUpdate();
            }
            addChild.ID = childID;
            addChild.isUpdate = true;
            addChild.setUpdate();
            addChild.loadChildDetails();
            if (InformantID.getText().equals("")) {
                JOptionPane.showMessageDialog(this, "Save new informant to continue");
            } else {
                addChild.setVisible(true);
            }
        } catch (ParseException ex) {
            System.out.println(ex);
        }

    }//GEN-LAST:event_jButton7ActionPerformed

    private void jTable2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable2MouseClicked
        // TODO add your handling code here:
        childID = Integer.parseInt(String.valueOf(model.getValueAt(jTable2.getSelectedRow(), 0)));
    }//GEN-LAST:event_jTable2MouseClicked

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        DeleteChild();
        LoadChild();
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        if (Lname.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Last name required to continue");
        } else {

            if (capture == null) {
                capture = new Capture_image();
                capture.setViewALLDETAILS(this, false);
                capture.setVisible(true);
            } else {
                capture.setVisible(true);
                capture.setViewALLDETAILS(this, false);

            }
//

        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        try {
            // TODO add your handling code here:
            int i = JOptionPane.showConfirmDialog(this, "Update Profile Sheet scanned image. Do you want to continue?", "Update Profile Sheet", JOptionPane.YES_NO_OPTION);

            if (i == 0) {

                JFileChooser chooser = new JFileChooser();
                chooser.showOpenDialog(this);
                File sFile = chooser.getSelectedFile();
                //BufferedImage bufferedImage=ImageIO.read(sFile);
                Image image = ImageIO.read(sFile);
                //Image myImage=image.getScaledInstance(161, 151,Image.SCALE_FAST);

                File sourFile = new File(sFile.getAbsolutePath());
                File desFile = new File(System.getProperty("user.dir") + "\\\\legacy\\\\" + f_name.getText() + Lname.getText() + M_Name.getText() + "IAPS" + ".jpg");

                if (desFile.exists()) {
                    System.out.println("file exist");
                    Files.copy(sourFile.toPath(), desFile.toPath(), StandardCopyOption.COPY_ATTRIBUTES, StandardCopyOption.REPLACE_EXISTING);
                } else {

                    Files.copy(sourFile.toPath(), desFile.toPath(), StandardCopyOption.COPY_ATTRIBUTES, StandardCopyOption.REPLACE_EXISTING);
                }
                String imagePath = desFile.getCanonicalPath();
                // String a="\"";
                String b = "/";
                IAPS_Loc.setText(imagePath);
                imagePath = imagePath.replace("\\", b);
                IPAString = imagePath;
                System.out.println(imagePath);
            }
        } catch (IOException ex) {
            System.out.println(ex);
        }
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        try {
            // TODO add your handling code here:
            int i = JOptionPane.showConfirmDialog(this, "Update Source Data Card scanned image. Do you want to continue?", "Update Source Data Card", JOptionPane.YES_NO_OPTION);

            if (i == 0) {
                JFileChooser chooser = new JFileChooser();
                chooser.showOpenDialog(this);
                File sFile = chooser.getSelectedFile();
                //BufferedImage bufferedImage=ImageIO.read(sFile);
                Image image = ImageIO.read(sFile);
                //Image myImage=image.getScaledInstance(161, 151,Image.SCALE_FAST);

                File sourFile = new File(sFile.getAbsolutePath());
                File desFile = new File(System.getProperty("user.dir") + "\\\\legacy\\\\" + f_name.getText() + Lname.getText() + M_Name.getText() + "SDCSCS" + ".jpg");

                if (desFile.exists()) {
                    System.out.println("file exist");
                    Files.copy(sourFile.toPath(), desFile.toPath(), StandardCopyOption.COPY_ATTRIBUTES, StandardCopyOption.REPLACE_EXISTING);
                } else {

                    Files.copy(sourFile.toPath(), desFile.toPath(), StandardCopyOption.COPY_ATTRIBUTES, StandardCopyOption.REPLACE_EXISTING);
                }
                String imagePath = desFile.getCanonicalPath();
                // String a="\"";
                String b = "/";
                SDCSCS_Loc.setText(imagePath);
                imagePath = imagePath.replace("\\", b);
                SDCSDString = imagePath;
                System.out.println(imagePath);
            }
        } catch (IOException ex) {
            System.out.println(ex);
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    public void DeleteChild() {

        try {

            int i = JOptionPane.showConfirmDialog(this, "Child will be deleted. Do you want to continue?", "Delete Child", JOptionPane.YES_NO_OPTION);
            if (i == 0) {

                DBConnection.init();
                Connection c = DBConnection.getConnection();
                PreparedStatement ps;
                ps = c.prepareStatement("Delete from child where idChild=(?)");

                ps.setString(1, String.valueOf(childID));

                ps.executeUpdate();
                JOptionPane.showMessageDialog(null, "Child Deleted");
            }
        } catch (SQLException ex) {
            System.out.println(ex);
        }

    }

    Capture_image capture;
    BufferedImage image_captureImage;

    public Capture_image getCapture() {
        return capture;
    }

    public void setImage_captureImage(BufferedImage image_captureImage) {
        this.image_captureImage = image_captureImage;
    }

    public void setCapture(Capture_image capture) {
        this.capture = capture;
    }

    void Write_image() {
        if (Lname.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Last name required to continue");
        } else {
            try {
                if (!update) {

                    Image image = image_captureImage;
                    Image myImage = image.getScaledInstance(161, 151, Image.SCALE_FAST);
                    ImageIO.write(image_captureImage, "JPG", new File(System.getProperty("user.dir") + "\\\\BIN_PIC\\\\" + f_name.getText() + Lname.getText() + M_Name.getText() + ".jpg"));

                    File sourFile = new File(System.getProperty("user.dir") + "\\\\BIN_PIC\\\\" + f_name.getText() + Lname.getText() + M_Name.getText() + ".jpg");
                    //File desFile =new File("C:\\Users\\JAMIEXXX3\\Documents\\sample\\5.jpg");

                    //Files.copy(sourFile.toPath(), desFile.toPath());
                    DBConnection.init();
                    Connection c = DBConnection.getConnection();
                    PreparedStatement ps;
                    ResultSet rs;
                    ps = c.prepareStatement("Select * from  informant_info");
                    rs = ps.executeQuery();
                    int i = 1;
                    while (rs.next()) {
                        i++;
                    }

                    if (f_name.getText().equals("") && Lname.getText().equals("")) {
                        JOptionPane.showMessageDialog(this, "To continue supply information before attaching image.");
                    } else {
                        PictureView.setIcon(new ImageIcon(myImage));
                        File desFile = new File(System.getProperty("user.dir") + "\\\\BIN_PIC\\\\" + f_name.getText() + Lname.getText() + M_Name.getText() + ".jpg");

                        if (desFile.exists()) {
                            System.out.println("file exist");
                            Files.copy(sourFile.toPath(), desFile.toPath(), StandardCopyOption.COPY_ATTRIBUTES, StandardCopyOption.REPLACE_EXISTING);
                            ImageFilePath.setText(imagePath);
                            System.out.println(desFile.getAbsolutePath());
                            imagePath = desFile.getCanonicalPath();
                            // String a="\"";
                            String b = "/";
                            imagePath = imagePath.replace("\\", b);
                            System.out.println(imagePath);
                            ImageFilePath.setText(imagePath);
                            i = 0;
                        } else {

                            Files.copy(sourFile.toPath(), desFile.toPath());
                            PictureView.setIcon(new ImageIcon(myImage));
                            System.out.println(desFile.getAbsolutePath());
                            imagePath = desFile.getCanonicalPath();
                            // String a="\"";
                            String b = "/";
                            imagePath = imagePath.replace("\\", b);
                            System.out.println(imagePath);
                            ImageFilePath.setText(imagePath);
                            i = 0;

                        }
                    }
                } else {

                    JOptionPane.showOptionDialog(this, "Updating Profile Photo ", "You sure you what to update Profile Photo", WIDTH, WIDTH, null, null, nationalilty);

                    JFileChooser chooser = new JFileChooser();
                    chooser.showOpenDialog(this);
                    File sFile = chooser.getSelectedFile();
                    // BufferedImage bufferedImage=ImageIO.read(sFile);
                    Image image = ImageIO.read(sFile);
                    Image myImage = image.getScaledInstance(161, 151, Image.SCALE_FAST);

                    File sourFile = new File(sFile.getAbsolutePath());

                    PictureView.setIcon(new ImageIcon(myImage));

                    //System.out.println("int i value  "+i+"");
                    File desFile = new File(System.getProperty("user.dir") + "\\BIN_PIC\\" + f_name.getText() + Lname.getText() + M_Name.getText() + ".jpg");

                    Files.copy(sourFile.toPath(), desFile.toPath(), StandardCopyOption.COPY_ATTRIBUTES, StandardCopyOption.REPLACE_EXISTING);
                    imagePath = desFile.getCanonicalPath();

                    ////  PictureView.setIcon(new ImageIcon(myImage));
                    //  System.out.println(desFile.getAbsolutePath());
                    // imagePath=desFile.getCanonicalPath();
                    // String a="\"";
                    String b = "/";
                    imagePath = imagePath.replace("\\", b);
                    System.out.println(imagePath);
                    ImageFilePath.setText(imagePath);

                    // i=0;
                }

            } catch (Exception e) {

                System.out.println(e);
                ImageFilePath.setText(imagePath);
            }
        }

    }

    public void LoadRecordsProfile() throws ParseException {
        try {
            DBConnection.init();
            Connection c = DBConnection.getConnection();
            PreparedStatement ps;
            ResultSet rs;
            ps = c.prepareStatement("Select * from  informant_info where idInformant_info='" + ID + "'");
            rs = ps.executeQuery();

            if (rs.next()) {

                this.f_name.setText(rs.getString(2));
                this.M_Name.setText(rs.getString(3));
                this.Lname.setText(rs.getString(4));

                df = new SimpleDateFormat("yyyy-MM-d");
                // dateString=String.valueOf(df.format(date.getDate()));
                System.out.println(dateString);
                Date dateD = null;

                Date dateR = null;

                try {
                    dateR = new SimpleDateFormat("yyyy-MM-d").parse(rs.getString(51));
                    dateD = new SimpleDateFormat("yyyy-MM-d").parse(rs.getString(52));

                    //Date myDate=df.parse(dateString);
                } catch (ParseException ex) {
                    System.out.println(ex);
                }

                date.setDate(dateD);
                dateReC.setDate(dateR);

                Calendar now = Calendar.getInstance();
                Calendar bday = Calendar.getInstance();
                //now.setTime(null);
                bday.setTime(date.getDate());
                int age1 = now.get(Calendar.YEAR) - bday.get(Calendar.YEAR);

                age.setText(String.valueOf(age1));

                //this.age.setText(rs.getString(5));
                this.nationalilty.setText(rs.getString(6));
                this.religion.setText(rs.getString(7));
                this.cb_maritals_status.setSelectedItem(rs.getString(8));
                this.education.setText(rs.getString(9));
                this.alias.setText(rs.getString(10));
                this.place_birth.setText(rs.getString(11));
                this.presentADD.setText(rs.getString(12));
                this.PermaentADD.setText(rs.getString(13));
                this.ZipCode.setText(rs.getString(14));
                this.S_Codification.setText(rs.getString(15));
                this.Status_Codification.setSelectedItem(rs.getString(16));
                this.P_Barangay.setSelectedItem(rs.getString(17));
                this.Permanet_Barangay.setSelectedItem(rs.getString(18));
                this.face.setText(rs.getString(19));
                this.Hair.setText(rs.getString(20));
                this.Complexion.setSelectedItem(rs.getString(21));
                this.Eyes.setText(rs.getString(22));
                this.Build.setText(rs.getString(23));
                this.Body.setText(rs.getString(24));
                this.Gen_Apprerance.setText(rs.getString(25));
                this.Inden_char.setText(rs.getString(26));
                this.Height.setText(rs.getString(27));
                this.Mil_Services.setText(rs.getString(28));
                this.Other_Org.setText(rs.getString(29));
                this.Fore_training.setText(rs.getString(30));
                this.Employement.setText(rs.getString(31));
                this.position.setText(rs.getString(32));
                //CityMun.setText(rs.getString(57));
                CbCityMun.setSelectedItem(rs.getString(57));
                Province.setText(rs.getString(55));
                BirthCountry.setText(rs.getString(58));
                Threat1.setText(rs.getString(56));
                Type1.setText(rs.getString(59));
                CriminalRecords.setText(rs.getString(61));
                //  this.Date_Rec.setText(rs.getString(34));

                this.Add_emloyer.setText(rs.getString(33));
                this.Termination_date.setText(rs.getString(34));
                this.Mode_Contanct.setText(rs.getString(35));
                this.Mobile_Num.setText(rs.getString(36));
                this.Email.setText(rs.getString(37));
                this.ContactPersonm.setText(rs.getString(38));
                this.Mobile_Contact_Per.setText(rs.getString(39));

                this.CodeName.setText(rs.getString(43));
                this.pydonym.setText(rs.getString(44));
                this.Handler2.setText(rs.getString(45));
                this.OperationProject.setText(rs.getString(46));
                this.Spouse.setText(rs.getString(47));
                this.TIN.setText(rs.getString(48));
                CBgender.setSelectedItem(rs.getString(49));
                this.target.setText(rs.getString(50));
                InformantID.setText(String.valueOf(ID));
                Category1.setText(rs.getString(60));

                //IPAString=rs.getString(rs.getString(63));
                // SDCSDString=rs.getString(rs.getString(64));
                IAPS_Loc.setText(rs.getString(63));
                SDCSCS_Loc.setText(rs.getString(64));
                IPAString = IAPS_Loc.getText();
                SDCSDString = SDCSCS_Loc.getText();
                System.out.println(IPAString);
                System.out.println(SDCSDString);

                System.out.println(rs.getString(42));
                File FImage = new File(rs.getString(42));
                ImageFilePath.setText(rs.getString(42));

                try {
                    Image image = ImageIO.read(FImage);
                    Image myImage = image.getScaledInstance(161, 151, Image.SCALE_FAST);
                    PictureView.setIcon(new ImageIcon(myImage));
                } catch (IOException ex) {
                    PictureView.setText("      No photo available");
                    //JOptionPane.showMessageDialog(this,"No photo available");
                    System.out.println(ex);

                }
                jTabbedPane1.setSelectedIndex(0);

            }

        } catch (SQLException e) {
            System.out.println(e);
        }

    }

    Records rec;

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ViewALLDETAILS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ViewALLDETAILS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ViewALLDETAILS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ViewALLDETAILS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ViewALLDETAILS().setVisible(true);
            }
        });
    }

    public void ClearField() {
        this.f_name.setText("");
        this.M_Name.setText("");
        this.Lname.setText("");
        date.cleanup();
        this.age.setText("");
        this.nationalilty.setText("");
        this.religion.setText("");
        this.cb_maritals_status.setSelectedItem(0);
        this.education.setText("");
        this.alias.setText("");
        this.place_birth.setText("");
        this.presentADD.setText("");
        this.PermaentADD.setText("");
        this.ZipCode.setText("");
        this.S_Codification.setText("");
        this.Status_Codification.setSelectedIndex(0);
        this.P_Barangay.setSelectedIndex(0);
        this.Permanet_Barangay.setSelectedIndex(0);
        this.face.setText("");
        this.Hair.setText("");
        this.Complexion.setSelectedIndex(0);
        this.Eyes.setText("");
        this.Build.setText("");
        this.Body.setText("");
        this.Gen_Apprerance.setText("");
        this.Inden_char.setText("");
        this.Height.setText("");
        this.Mil_Services.setText("");
        this.Other_Org.setText("");
        this.Fore_training.setText("");
        this.Employement.setText("");
        this.position.setText("");
        dateReC.cleanup();
        this.Add_emloyer.setText("");
        this.Termination_date.setText("");
        this.Mode_Contanct.setText("");
        this.Mobile_Num.setText("");
        this.Email.setText("");
        this.ContactPersonm.setText("");
        this.Mobile_Contact_Per.setText("");
        ImageFilePath.setText("");

    }

    public void LoadNameOnlyData() {
        try {
            DBConnection.init();
            Connection c = DBConnection.getConnection();
            PreparedStatement ps;
            ResultSet rs;
            ps = c.prepareStatement("Select * from  informant_info");
            rs = ps.executeQuery();
            while (rs.next()) {
                model.addRow(new Object[]{rs.getString(1), rs.getString(4) + " " + rs.getString(2) + " " + rs.getString(3), rs.getString(27), rs.getString(34)});
            }

        } catch (Exception e) {
            System.out.println(e);
        }
    }
    /**
     * public void LoadSerachDataId(){ try{ model.setRowCount(0); String
     * S="%"+this.SearchData.getText()+"%"; DBConnection.init(); Connection
     * c=DBConnection.getConnection(); PreparedStatement ps; ResultSet rs;
     * ps=c.prepareStatement("Select * from informant_info where
     * idInformant_info like '"+S+"'"); rs=ps.executeQuery(); while(rs.next()){
     * model.addRow(new Object[]{rs.getString(1),rs.getString(4)+"
     * "+rs.getString(2)+" "+rs.getString(3), rs.getString(27)
     * ,rs.getString(34)}); }
     *
     *
     * }
     * catch(Exception e){System.out.println(e); }
     *
     *
     * }
     * public void LoadSerachDataFname(){ try{ model.setRowCount(0); String
     * S="%"+this.SearchData.getText()+"%"; DBConnection.init(); Connection
     * c=DBConnection.getConnection(); PreparedStatement ps; ResultSet rs;
     * ps=c.prepareStatement("Select * from informant_info where F_Name like
     * '"+S+"'"); rs=ps.executeQuery(); while(rs.next()){ model.addRow(new
     * Object[]{rs.getString(1),rs.getString(4)+" "+rs.getString(2)+"
     * "+rs.getString(3), rs.getString(27) ,rs.getString(34)}); } }
     * catch(Exception e){System.out.println(e); }} public void
     * LoadSerachDataFnameM_Name(){ try{ model.setRowCount(0); String
     * S="%"+this.SearchData.getText()+"%"; DBConnection.init(); Connection
     * c=DBConnection.getConnection(); PreparedStatement ps; ResultSet rs;
     * ps=c.prepareStatement("Select * from informant_info where M_Name like
     * '"+S+"'"); rs=ps.executeQuery(); while(rs.next()){ model.addRow(new
     * Object[]{rs.getString(1),rs.getString(4)+" "+rs.getString(2)+"
     * "+rs.getString(3), rs.getString(27) ,rs.getString(34)}); } }
     * catch(Exception e){System.out.println(e); }} public void
     * LoadSerachDataL_name(){ try{ model.setRowCount(0); String
     * S="%"+this.SearchData.getText()+"%"; DBConnection.init(); Connection
     * c=DBConnection.getConnection(); PreparedStatement ps; ResultSet rs;
     * ps=c.prepareStatement("Select * from informant_info where L_Name like
     * '"+S+"'"); rs=ps.executeQuery(); while(rs.next()){ model.addRow(new
     * Object[]{rs.getString(1),rs.getString(4)+" "+rs.getString(2)+"
     * "+rs.getString(3), rs.getString(27) ,rs.getString(34)}); } }
     * catch(Exception e){System.out.println(e); }} public void
     * LoadSerachDataD_Recuitment(){ try{ model.setRowCount(0); String
     * S="%"+this.SearchData.getText()+"%"; DBConnection.init(); Connection
     * c=DBConnection.getConnection(); PreparedStatement ps; ResultSet rs;
     * ps=c.prepareStatement("Select * from informant_info where D_Recuitment
     * like '"+S+"'"); rs=ps.executeQuery(); while(rs.next()){ model.addRow(new
     * Object[]{rs.getString(1),rs.getString(4)+" "+rs.getString(2)+"
     * "+rs.getString(3), rs.getString(27) ,rs.getString(34)}); } }
     * catch(Exception e){System.out.println(e); }} public void
     * LoadSerachDataIden_Char(){ try{ model.setRowCount(0); String
     * S="%"+this.SearchData.getText()+"%"; DBConnection.init(); Connection
     * c=DBConnection.getConnection(); PreparedStatement ps; ResultSet rs;
     * ps=c.prepareStatement("Select * from informant_info where Iden_Char like
     * '"+S+"'"); rs=ps.executeQuery(); while(rs.next()){ model.addRow(new
     * Object[]{rs.getString(1),rs.getString(4)+" "+rs.getString(2)+"
     * "+rs.getString(3), rs.getString(27) ,rs.getString(34)}); } }
     * catch(Exception e){System.out.println(e); }}
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JTextField Add_emloyer;
    private javax.swing.JTextField BirthCountry;
    public javax.swing.JTextField Body;
    public javax.swing.JTextField Build;
    private javax.swing.JComboBox CBgender;
    private javax.swing.JTextField Category1;
    private javax.swing.JComboBox CbCityMun;
    private javax.swing.JTextField CodeName;
    public javax.swing.JComboBox Complexion;
    public javax.swing.JTextField ContactPersonm;
    private javax.swing.JTextArea CriminalRecords;
    public javax.swing.JTextField Email;
    public javax.swing.JTextField Employement;
    public javax.swing.JTextField Eyes;
    public javax.swing.JTextField Fore_training;
    public javax.swing.JTextField Gen_Apprerance;
    public javax.swing.JTextField Hair;
    private javax.swing.JTextField Handler2;
    public javax.swing.JTextField Height;
    private javax.swing.JLabel IAPS_Loc;
    private javax.swing.JTextField ImageFilePath;
    public javax.swing.JTextField Inden_char;
    private javax.swing.JLabel InformantID;
    private javax.swing.JTextField Lname;
    private javax.swing.JTextField M_Name;
    public javax.swing.JTextField Mil_Services;
    public javax.swing.JTextField Mobile_Contact_Per;
    public javax.swing.JTextField Mobile_Num;
    public javax.swing.JTextField Mode_Contanct;
    private javax.swing.JTextField OperationProject;
    public javax.swing.JTextField Other_Org;
    private javax.swing.JComboBox P_Barangay;
    private javax.swing.JTextField PermaentADD;
    private javax.swing.JComboBox Permanet_Barangay;
    private javax.swing.JLabel PictureView;
    private javax.swing.JTextField Province;
    private javax.swing.JLabel SDCSCS_Loc;
    private javax.swing.JTextField S_Codification;
    private javax.swing.JTextField Spouse;
    private javax.swing.JComboBox Status_Codification;
    public javax.swing.JTextField TIN;
    public javax.swing.JTextField Termination_date;
    private javax.swing.JTextField Threat1;
    private javax.swing.JTextField Type1;
    public javax.swing.JButton Update_Button;
    private javax.swing.JTextField ZipCode;
    private javax.swing.JTextField age;
    private javax.swing.JTextField alias;
    private javax.swing.JComboBox cb_maritals_status;
    private com.toedter.calendar.JDateChooser date;
    private com.toedter.calendar.JDateChooser dateReC;
    private com.toedter.calendar.JDateChooser dateSBdate;
    private javax.swing.JTextField education;
    private javax.swing.JTextField f_name;
    public javax.swing.JTextField face;
    public javax.swing.JButton jButton1;
    public javax.swing.JButton jButton2;
    public javax.swing.JButton jButton3;
    public javax.swing.JButton jButton4;
    public javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    public javax.swing.JButton jButton7;
    public javax.swing.JButton jButton8;
    private javax.swing.JDesktopPane jDesktopPane1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel50;
    private javax.swing.JLabel jLabel51;
    private javax.swing.JLabel jLabel53;
    private javax.swing.JLabel jLabel55;
    private javax.swing.JLabel jLabel56;
    private javax.swing.JLabel jLabel57;
    private javax.swing.JLabel jLabel58;
    private javax.swing.JLabel jLabel59;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel60;
    private javax.swing.JLabel jLabel61;
    private javax.swing.JLabel jLabel62;
    private javax.swing.JLabel jLabel67;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel70;
    private javax.swing.JLabel jLabel71;
    private javax.swing.JLabel jLabel72;
    private javax.swing.JLabel jLabel73;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextField nationalilty;
    private javax.swing.JTextField place_birth;
    public javax.swing.JTextField position;
    private javax.swing.JTextField position1;
    private javax.swing.JTextField presentADD;
    private javax.swing.JTextField pydonym;
    private javax.swing.JTextField religion;
    private javax.swing.JTextField target;
    // End of variables declaration//GEN-END:variables

    private Connection OpenDatabaseConnection() {
        Connection c = null;

        try {
            Class.forName("com.mysql.jdbc.Driver").newInstance();
            c = DriverManager.getConnection("jdbc:mysql://localhost:3306/bin", "root", "root");
        } catch (Exception e) {
            System.out.println(e);
        }
        return c;
    }

    public void LoadDataSelect() throws ParseException {
        update = true;
        // jButton4.setEnabled(false);
        this.LoadRecordsProfile();

    }

    SimpleDateFormat dfs;

    public void UPDATEOthers() {
        try {

            String ComplexionsString;
            df = new SimpleDateFormat("yyyy-MM-dd");
            dateString = String.valueOf(df.format(date.getDate()));
            System.out.println("date " + dateString);

            dfs = new SimpleDateFormat("MMMMMMMM d, yyyy");
            dateRec = String.valueOf(df.format(dateReC.getDate()));

            if (dateSBdate.getDate() == null) {
                dateS_Bdate = "";
            } else {
                dateS_Bdate = String.valueOf(dfs.format(dateSBdate.getDate()));
            }

            System.out.println("date " + dateRec);

            if (dateString.equals("") || dateReC.equals("") || date.getDate() == null || dateReC.getDate() == null) {
                JOptionPane.showConfirmDialog(this, "Birth date or date of recuitment is empty or invalid");
            }

            if (Complexion.getSelectedItem().toString().equals("Select Complexion")) {
                ComplexionsString = "";

            } else {
                ComplexionsString = Complexion.getSelectedItem().toString();

            }

            int a = JOptionPane.showConfirmDialog(this, "Are you sure you want to update the current informant details?", "Update Informant", JOptionPane.YES_NO_OPTION);

            if (a == 0) {
                Connection c = OpenDatabaseConnection();
                PreparedStatement ps;

                ps = c.prepareStatement("Update  informant_info set idInformant_info=(?),F_Name=(?),M_Name=(?),L_Name=(?),B_Date=(?),Age=(?),Nationality=(?),Religion=(?),Mar_status=(?),Education=(?),Alias=(?),Place_Birth=(?),P_Adrress=(?),Per_Adrress=(?),Zipcode=(?),S_Codification=(?),Status=(?),B_PAdrress=(?),B_PreAdress=(?),Face=(?),Hair=(?),Complexion=(?),Eyes=(?),Build=(?),Body=(?),Gen_App=(?),Iden_Char=(?),Height=(?),Mel_Service=(?),Other_Org=(?),F_Training=(?),Employement=(?),Position=(?),D_Recuitment=(?),N_Employer=(?),TerminationDate=(?),Mode_Con=(?),Mob_no=(?),Email=(?),P_Con=(?),P_Con_num=(?),EntryTime=(?),EntryDate=(?),PictureFilePath=(?),CodeName=(?),Psedonym=(?),Handlers=(?),OperationProject=(?),SpouseName=(?),TINNR=(?),Gender=(?),Target=(?),E_Date=(?),E_Time=(?),CriminalR=(?),Threat=(?),Type=(?),Category=(?),Mun_City=(?),Provice=(?),BirthCounty=(?),Spouse_Bdate=(?),IAPS_loc=(?),SDCSDS_loc=(?) where idInformant_info like(?)");
                //  +"','"++"','"++"','"++"','"++"','"++"','"++"','"++"','"++"','"++"','"++"','"++"','"++"','"++"','"++"','"++"','"++"','"++"','"++"','"++"','"++"','"++"','"++"','"++"','"++"','"++"','"++"','"++"','"++"','"++"'" + ",'"++"','"++"','"++"','"++"','"++"','"++"','"+)+"','"+"','"++"','"++"')");
                ps.setString(1, this.InformantID.getText());
                ps.setString(2, this.f_name.getText());
                ps.setString(3, this.M_Name.getText());
                ps.setString(4, this.Lname.getText());
                ps.setString(5, dateString);
                ps.setString(6, this.age.getText());
                ps.setString(7, this.nationalilty.getText());
                ps.setString(8, this.religion.getText());
                ps.setString(9, this.cb_maritals_status.getSelectedItem().toString());
                ps.setString(10, this.education.getText());
                ps.setString(11, this.alias.getText());
                ps.setString(12, this.place_birth.getText());
                ps.setString(13, this.presentADD.getText());
                ps.setString(14, this.PermaentADD.getText());
                ps.setString(15, this.ZipCode.getText());
                ps.setString(16, this.S_Codification.getText());
                ps.setString(17, this.Status_Codification.getSelectedItem().toString());
                ps.setString(18, this.P_Barangay.getSelectedItem().toString());
                ps.setString(19, this.Permanet_Barangay.getSelectedItem().toString());
                ps.setString(20, this.face.getText());
                ps.setString(21, this.Hair.getText());
                ps.setString(22, ComplexionsString);
                ps.setString(23, this.Eyes.getText());
                ps.setString(24, this.Build.getText());
                ps.setString(25, this.Body.getText());
                ps.setString(26, this.Gen_Apprerance.getText());
                ps.setString(27, this.Inden_char.getText());
                ps.setString(28, this.Height.getText());
                ps.setString(29, this.Mil_Services.getText());
                ps.setString(30, this.Other_Org.getText());
                ps.setString(31, this.Fore_training.getText());
                ps.setString(32, this.Employement.getText());
                ps.setString(33, this.position.getText());
                ps.setString(34, dateRec);
                ps.setString(35, this.Add_emloyer.getText());
                ps.setString(36, this.Termination_date.getText());
                ps.setString(37, this.Mode_Contanct.getText());
                ps.setString(38, this.Mobile_Num.getText());
                ps.setString(39, this.Email.getText());
                ps.setString(40, this.ContactPersonm.getText());
                ps.setString(41, this.Mobile_Contact_Per.getText());
                ps.setString(42, position1.getText());
                ps.setString(43, this.Date);

                String updateS = imagePath;
                // updateS=updateS.replace("\\", "/");
                System.out.println(imagePath + " hahahha");
                System.out.println(ImageFilePath.getText());
                ps.setString(44, ImageFilePath.getText());

                ps.setString(45, CodeName.getText());
                ps.setString(46, this.pydonym.getText());
                ps.setString(47, this.Handler2.getText());
                ps.setString(48, this.OperationProject.getText());
                ps.setString(49, this.Spouse.getText());
                ps.setString(50, this.TIN.getText());
                ps.setString(51, this.CBgender.getSelectedItem().toString());

                ps.setString(52, this.target.getText());
                ps.setString(53, Date);
                ps.setString(54, Time);
                ps.setString(55, CriminalRecords.getText());
                ps.setString(56, Threat1.getText());
                ps.setString(57, Type1.getText());
                ps.setString(58, Category1.getText());
                ps.setString(59, CbCityMun.getSelectedItem().toString());
                ps.setString(60, Province.getText());
                ps.setString(61, BirthCountry.getText());
                //LoadLatestIDforUppdate();
                ps.setString(62, dateS_Bdate);
                ps.setString(63, IPAString);
                ps.setString(64, SDCSDString);
                ps.setString(65, String.valueOf(ID));

                ps.executeUpdate();

                JOptionPane.showMessageDialog(null, "Informant successfully updated!");
                //ID=0;
            }

        } catch (SQLException e) {
            System.out.println(e);
        }

    }

    public void UPDATEOthersDate() {
        try {

            String ComplexionsString;
            df = new SimpleDateFormat("yyyy-MM-dd");
            dateString = String.valueOf(df.format(date.getDate()));
            System.out.println("date " + dateString);

            dfs = new SimpleDateFormat("MMMMMMMM d, yyyy");
            dateRec = String.valueOf(df.format(dateReC.getDate()));

            if (dateSBdate.getDate() == null) {
                dateS_Bdate = "";
            } else {
                dateS_Bdate = String.valueOf(dfs.format(dateSBdate.getDate()));
            }

            System.out.println("date " + dateRec);

            if (dateString.equals("") || dateReC.equals("") || date.getDate() == null || dateReC.getDate() == null) {
                JOptionPane.showConfirmDialog(this, "Birth date or date of recuitment is empty or invalid");
            }

            if (Complexion.getSelectedItem().toString().equals("Select Complexion")) {
                ComplexionsString = "";

            } else {
                ComplexionsString = Complexion.getSelectedItem().toString();

            }

            //int a=JOptionPane.showConfirmDialog(this,"Are you sure you want to update the current informant details?", "Update Informant", JOptionPane.YES_NO_OPTION);
            int a = 0;
            if (a == 0) {
                Connection c = OpenDatabaseConnection();
                PreparedStatement ps;

                ps = c.prepareStatement("Update  informant_info set idInformant_info=(?),F_Name=(?),M_Name=(?),L_Name=(?),B_Date=(?),Age=(?),Nationality=(?),Religion=(?),Mar_status=(?),Education=(?),Alias=(?),Place_Birth=(?),P_Adrress=(?),Per_Adrress=(?),Zipcode=(?),S_Codification=(?),Status=(?),B_PAdrress=(?),B_PreAdress=(?),Face=(?),Hair=(?),Complexion=(?),Eyes=(?),Build=(?),Body=(?),Gen_App=(?),Iden_Char=(?),Height=(?),Mel_Service=(?),Other_Org=(?),F_Training=(?),Employement=(?),Position=(?),D_Recuitment=(?),N_Employer=(?),TerminationDate=(?),Mode_Con=(?),Mob_no=(?),Email=(?),P_Con=(?),P_Con_num=(?),EntryTime=(?),EntryDate=(?),PictureFilePath=(?),CodeName=(?),Psedonym=(?),Handlers=(?),OperationProject=(?),SpouseName=(?),TINNR=(?),Gender=(?),Target=(?),E_Date=(?),E_Time=(?),CriminalR=(?),Threat=(?),Type=(?),Category=(?),Mun_City=(?),Provice=(?),BirthCounty=(?),Spouse_Bdate=(?),IAPS_loc=(?),SDCSDS_loc=(?) where idInformant_info like(?)");
                //  +"','"++"','"++"','"++"','"++"','"++"','"++"','"++"','"++"','"++"','"++"','"++"','"++"','"++"','"++"','"++"','"++"','"++"','"++"','"++"','"++"','"++"','"++"','"++"','"++"','"++"','"++"','"++"','"++"','"++"'" + ",'"++"','"++"','"++"','"++"','"++"','"++"','"+)+"','"+"','"++"','"++"')");
                ps.setString(1, this.InformantID.getText());
                ps.setString(2, this.f_name.getText());
                ps.setString(3, this.M_Name.getText());
                ps.setString(4, this.Lname.getText());
                ps.setString(5, dateString);
                ps.setString(6, this.age.getText());
                ps.setString(7, this.nationalilty.getText());
                ps.setString(8, this.religion.getText());
                ps.setString(9, this.cb_maritals_status.getSelectedItem().toString());
                ps.setString(10, this.education.getText());
                ps.setString(11, this.alias.getText());
                ps.setString(12, this.place_birth.getText());
                ps.setString(13, this.presentADD.getText());
                ps.setString(14, this.PermaentADD.getText());
                ps.setString(15, this.ZipCode.getText());
                ps.setString(16, this.S_Codification.getText());
                ps.setString(17, this.Status_Codification.getSelectedItem().toString());
                ps.setString(18, this.P_Barangay.getSelectedItem().toString());
                ps.setString(19, this.Permanet_Barangay.getSelectedItem().toString());
                ps.setString(20, this.face.getText());
                ps.setString(21, this.Hair.getText());
                ps.setString(22, ComplexionsString);
                ps.setString(23, this.Eyes.getText());
                ps.setString(24, this.Build.getText());
                ps.setString(25, this.Body.getText());
                ps.setString(26, this.Gen_Apprerance.getText());
                ps.setString(27, this.Inden_char.getText());
                ps.setString(28, this.Height.getText());
                ps.setString(29, this.Mil_Services.getText());
                ps.setString(30, this.Other_Org.getText());
                ps.setString(31, this.Fore_training.getText());
                ps.setString(32, this.Employement.getText());
                ps.setString(33, this.position.getText());
                ps.setString(34, dateRec);
                ps.setString(35, this.Add_emloyer.getText());
                ps.setString(36, this.Termination_date.getText());
                ps.setString(37, this.Mode_Contanct.getText());
                ps.setString(38, this.Mobile_Num.getText());
                ps.setString(39, this.Email.getText());
                ps.setString(40, this.ContactPersonm.getText());
                ps.setString(41, this.Mobile_Contact_Per.getText());
                ps.setString(42, position1.getText());
                ps.setString(43, this.Date);

                String updateS = imagePath;
                // updateS=updateS.replace("\\", "/");
                System.out.println(imagePath + " hahahha");
                System.out.println(ImageFilePath.getText());
                ps.setString(44, ImageFilePath.getText());

                ps.setString(45, CodeName.getText());
                ps.setString(46, this.pydonym.getText());
                ps.setString(47, this.Handler2.getText());
                ps.setString(48, this.OperationProject.getText());
                ps.setString(49, this.Spouse.getText());
                ps.setString(50, this.TIN.getText());
                ps.setString(51, this.CBgender.getSelectedItem().toString());

                ps.setString(52, this.target.getText());
                ps.setString(53, Date);
                ps.setString(54, Time);
                ps.setString(55, CriminalRecords.getText());
                ps.setString(56, Threat1.getText());
                ps.setString(57, Type1.getText());
                ps.setString(58, Category1.getText());
                ps.setString(59, CbCityMun.getSelectedItem().toString());
                ps.setString(60, Province.getText());
                ps.setString(61, BirthCountry.getText());
                //LoadLatestIDforUppdate();
                ps.setString(62, dateS_Bdate);
                ps.setString(63, IPAString);
                ps.setString(64, SDCSDString);
                ps.setString(65, String.valueOf(ID));

                ps.executeUpdate();

                //  JOptionPane.showMessageDialog(null,"Informant successfully updated!");
                //ID=0;
                System.out.println("Age Updated");
            }

        } catch (SQLException e) {
            System.out.println(e);
        }

    }

    public void DateandTime() {
        Calendar cal = Calendar.getInstance();
        cal.getTime();
        SimpleDateFormat date = new SimpleDateFormat("yyyy/MM/d");
        SimpleDateFormat time = new SimpleDateFormat("hh:mm:ss");

        Date = (date.format(cal.getTime()));
        Time = (time.format(cal.getTime()));
    }

    public void RefreshTime() {
        TimerTask TT = new TimerTask() {
            @Override
            public void run() {
                DateandTime();
            }
        };

        Timer t = new Timer();
        t.scheduleAtFixedRate(TT, 1000, 1000);
    }

    public void UPDATE_ALL() {
        try {

            if (f_name.getText().isEmpty()) {
                JOptionPane.showMessageDialog(this, "The field first name is empty", "Empty field", JOptionPane.WARNING_MESSAGE);
                f_name.requestFocus();
            } else if (M_Name.getText().equals("")) {
                JOptionPane.showMessageDialog(this, "The field middle name is empty", "Empty field", JOptionPane.WARNING_MESSAGE);
                M_Name.requestFocus();
            } else if (Lname.getText().equals("")) {
                JOptionPane.showMessageDialog(this, "The field last name is empty", "Empty field", JOptionPane.WARNING_MESSAGE);
                Lname.requestFocus();
            } else if (age.getText().equals("")) {
                JOptionPane.showMessageDialog(this, "The field age is empty", "Empty field", JOptionPane.WARNING_MESSAGE);
                age.requestFocus();
            } else if (nationalilty.getText().equals("")) {
                JOptionPane.showMessageDialog(this, "The field nationality name is empty", "Empty field", JOptionPane.WARNING_MESSAGE);
                nationalilty.requestFocus();
            } else if (religion.getText().equals("")) {
                JOptionPane.showMessageDialog(this, "The field religion is empty", "Empty field", JOptionPane.WARNING_MESSAGE);
                religion.requestFocus();
            } else if (cb_maritals_status.getSelectedItem().equals("")) {
                JOptionPane.showMessageDialog(this, "The field nationality name is Empty", "Empty field", JOptionPane.WARNING_MESSAGE);
                cb_maritals_status.requestFocus();
            } else if (education.getText().equals("")) {
                JOptionPane.showMessageDialog(this, "The field education is Empty", "Empty field", JOptionPane.WARNING_MESSAGE);
                education.requestFocus();
            } else if (alias.getText().equals("")) {
                JOptionPane.showMessageDialog(this, "The field alias name is empty", "Empty field", JOptionPane.WARNING_MESSAGE);
                alias.requestFocus();
            } else if (place_birth.getText().equals("")) {
                JOptionPane.showMessageDialog(this, "The field place of birth is empty", "Empty field", JOptionPane.WARNING_MESSAGE);
                place_birth.requestFocus();
            } else if (presentADD.getText().equals("")) {
                JOptionPane.showMessageDialog(this, "The field present address is empty", "Empty field", JOptionPane.WARNING_MESSAGE);
                presentADD.requestFocus();
            } else if (presentADD.getText().equals("")) {
                JOptionPane.showMessageDialog(this, "The field present Aaddress is empty", "Empty field", JOptionPane.WARNING_MESSAGE);
                presentADD.requestFocus();
            } else if (PermaentADD.getText().equals("")) {
                JOptionPane.showMessageDialog(this, "The field permanent address is empty", "Empty Field", JOptionPane.WARNING_MESSAGE);
                PermaentADD.requestFocus();
            } else if (presentADD.getText().equals("")) {
                JOptionPane.showMessageDialog(this, "The field present address is empty", "Empty field", JOptionPane.WARNING_MESSAGE);
                presentADD.requestFocus();
            } else if (ZipCode.getText().equals("")) {
                JOptionPane.showMessageDialog(this, "The field zipcode is Empty", "Empty field", JOptionPane.WARNING_MESSAGE);
                ZipCode.requestFocus();
            } else if (P_Barangay.getSelectedItem().equals("")) {
                JOptionPane.showMessageDialog(this, "The field present barangay is Empty", "Empty field", JOptionPane.WARNING_MESSAGE);
                P_Barangay.requestFocus();
            } else if (Permanet_Barangay.getSelectedItem().equals("")) {
                JOptionPane.showMessageDialog(this, "the field ermanent barangay is empty", "Empty field", JOptionPane.WARNING_MESSAGE);
                Permanet_Barangay.requestFocus();
            } else if (S_Codification.getText().equals("")) {
                JOptionPane.showMessageDialog(this, "the Field Source Codification is Empty", "Empty Field", JOptionPane.WARNING_MESSAGE);
                S_Codification.requestFocus();
            } else if (Status_Codification.getSelectedItem().equals("Select Status")) {
                JOptionPane.showMessageDialog(this, "the Field Source Codification is Empty", "Empty Field", JOptionPane.WARNING_MESSAGE);
                Status_Codification.requestFocus();
            } else if (face.getText().equals("")) {
                JOptionPane.showMessageDialog(this, "the Field Face in the Desription Tab  is Empty", "Empty Field", JOptionPane.WARNING_MESSAGE);
                this.jTabbedPane1.setSelectedIndex(1);
                face.requestFocus();
            } else if (Hair.getText().equals("")) {
                JOptionPane.showMessageDialog(this, "the Field Hair in the Desription Tab is Empty", "Empty Field", JOptionPane.WARNING_MESSAGE);
                this.jTabbedPane1.setSelectedIndex(1);
                Hair.requestFocus();
            } else if (Complexion.getSelectedItem().equals("")) {
                JOptionPane.showMessageDialog(this, "the Field Complexion in the Desription Tab is Empty", "Empty Field", JOptionPane.WARNING_MESSAGE);
                this.jTabbedPane1.setSelectedIndex(1);
                Complexion.requestFocus();
            } else if (Eyes.getText().equals("")) {
                JOptionPane.showMessageDialog(this, "the Field Hair in the Desription Tab is Empty", "Empty Field", JOptionPane.WARNING_MESSAGE);
                this.jTabbedPane1.setSelectedIndex(1);
                Eyes.requestFocus();
            } else if (Build.getText().equals("")) {
                JOptionPane.showMessageDialog(this, "the Field Build in the Desription Tab is Empty", "Empty Field", JOptionPane.WARNING_MESSAGE);
                this.jTabbedPane1.setSelectedIndex(1);
                Build.requestFocus();
            } else if (Body.getText().equals("")) {
                JOptionPane.showMessageDialog(this, "the Field Hair in the Desription Tab is Empty", "Empty Field", JOptionPane.WARNING_MESSAGE);
                this.jTabbedPane1.setSelectedIndex(1);
                Body.requestFocus();
            } else if (Gen_Apprerance.getText().equals("")) {
                JOptionPane.showMessageDialog(this, "the Field General Apperance in the Desription Tab is Empty", "Empty Field", JOptionPane.WARNING_MESSAGE);
                this.jTabbedPane1.setSelectedIndex(1);
                Gen_Apprerance.requestFocus();
            } else if (Inden_char.getText().equals("")) {
                JOptionPane.showMessageDialog(this, "the Field  Indentifiying Charterristics in the Desription Tab is Empty", "Empty Field", JOptionPane.WARNING_MESSAGE);
                this.jTabbedPane1.setSelectedIndex(1);
                Inden_char.requestFocus();
            } else if (Height.getText().equals("")) {
                JOptionPane.showMessageDialog(this, "the Field Height in the Desription Tab is Empty", "Empty Field", JOptionPane.WARNING_MESSAGE);
                this.jTabbedPane1.setSelectedIndex(1);
                Height.requestFocus();
            } else if (Mil_Services.getText().equals("")) {
                JOptionPane.showMessageDialog(this, "the Field  Military Services in the Affiiliation-Skills- EmployementTab is Empty", "Empty Field", JOptionPane.WARNING_MESSAGE);
                this.jTabbedPane1.setSelectedIndex(2);
                Mil_Services.requestFocus();
            } else if (Other_Org.getText().equals("")) {
                JOptionPane.showMessageDialog(this, "the Field  Other Ogranization in the Affiiliation-Skills- EmployementTab is Empty", "Empty Field", JOptionPane.WARNING_MESSAGE);
                this.jTabbedPane1.setSelectedIndex(2);
                Other_Org.requestFocus();
            } else if (Fore_training.getText().equals("")) {
                JOptionPane.showMessageDialog(this, "the Field  Foreing Training in the Affiiliation-Skills- Employement Tab is Empty", "Empty Field", JOptionPane.WARNING_MESSAGE);
                this.jTabbedPane1.setSelectedIndex(2);
                Fore_training.requestFocus();
            } else if (Employement.getText().equals("")) {
                JOptionPane.showMessageDialog(this, "the Field  Employment  in the Affiiliation-Skills- EmployementTab is Empty", "Empty Field", JOptionPane.WARNING_MESSAGE);
                this.jTabbedPane1.setSelectedIndex(2);
                Employement.requestFocus();
            } else if (position.getText().equals("")) {
                JOptionPane.showMessageDialog(this, "the Field  Employment Positon in the Affiiliation-Skills- Employement Tab is Empty", "Empty Field", JOptionPane.WARNING_MESSAGE);
                this.jTabbedPane1.setSelectedIndex(2);
                position.requestFocus();
            } else if (dateRec.equals("")) {
                JOptionPane.showMessageDialog(this, "the Field  Date of Recuitment  in the Affiiliation-Skills- Employement Tab is Empty", "Empty Field", JOptionPane.WARNING_MESSAGE);
                this.jTabbedPane1.setSelectedIndex(2);
                dateReC.requestFocus();
            } else if (Add_emloyer.getText().equals("")) {
                JOptionPane.showMessageDialog(this, "the Field  Address of Employer  in the Affiiliation-Skills- Employement Tab is Empty", "Empty Field", JOptionPane.WARNING_MESSAGE);
                this.jTabbedPane1.setSelectedIndex(2);
                Add_emloyer.requestFocus();
            } else if (Termination_date.getText().equals("")) {
                JOptionPane.showMessageDialog(this, "the Field Termination Date in the Affiiliation-Skills- EmployementTab is Empty", "Empty Field", JOptionPane.WARNING_MESSAGE);
                this.jTabbedPane1.setSelectedIndex(2);
                Termination_date.requestFocus();
            } else if (Mode_Contanct.getText().equals("")) {
                JOptionPane.showMessageDialog(this, "the Field  Mode of Contact  in the Contact Information  Tab is Empty", "Empty Field", JOptionPane.WARNING_MESSAGE);
                this.jTabbedPane1.setSelectedIndex(4);
                Mode_Contanct.requestFocus();
            } else if (Mobile_Num.getText().equals("")) {
                JOptionPane.showMessageDialog(this, "the Field  Mobile Number  in the Contact Information  Tab is Empty", "Empty Field", JOptionPane.WARNING_MESSAGE);
                this.jTabbedPane1.setSelectedIndex(4);
                Mobile_Num.requestFocus();
            } else if (Email.getText().equals("")) {
                JOptionPane.showMessageDialog(this, "the Field  Email in the Contact Information  Tab is Empty", "Empty Field", JOptionPane.WARNING_MESSAGE);
                this.jTabbedPane1.setSelectedIndex(4);
                Email.requestFocus();
            } else if (ContactPersonm.getText().equals("")) {
                JOptionPane.showMessageDialog(this, "the Field  Contact Person  in the Contact Information  Tab is Empty", "Empty Field", JOptionPane.WARNING_MESSAGE);
                this.jTabbedPane1.setSelectedIndex(4);
                ContactPersonm.requestFocus();
            } else if (Mobile_Contact_Per.getText().equals("")) {
                JOptionPane.showMessageDialog(this, "the Field  Mobile number of Person to Contact in case of Emergency  in the Contact Information  Tab is Empty", "Empty Field", JOptionPane.WARNING_MESSAGE);
                this.jTabbedPane1.setSelectedIndex(4);
                Mobile_Contact_Per.requestFocus();
            } else if (Mobile_Contact_Per.getText().equals("")) {
                JOptionPane.showMessageDialog(this, "the Field  Mobile number of Person to Contact in case of Emergency  in the Contact Information  Tab is Empty", "Empty Field", JOptionPane.WARNING_MESSAGE);
                this.jTabbedPane1.setSelectedIndex(4);
                Mobile_Contact_Per.requestFocus();
            } else if (CodeName.getText().equals("")) {
                JOptionPane.showMessageDialog(this, "the Field  Code Name of Description in case of Emergency  in the Contact Information  Tab is Empty", "Empty Field", JOptionPane.WARNING_MESSAGE);
                this.jTabbedPane1.setSelectedIndex(2);
                CodeName.requestFocus();
            } else if (pydonym.getText().equals("")) {
                JOptionPane.showMessageDialog(this, "the Field  Pydonym of  Description in case of Emergency  in the Contact Information  Tab is Empty", "Empty Field", JOptionPane.WARNING_MESSAGE);
                this.jTabbedPane1.setSelectedIndex(2);
                pydonym.requestFocus();
            } else if (Handler2.getText().equals("")) {
                JOptionPane.showMessageDialog(this, "the Field  Handler number of of Description  in the Contact Information  Tab is Empty", "Empty Field", JOptionPane.WARNING_MESSAGE);
                this.jTabbedPane1.setSelectedIndex(2);
                Handler2.requestFocus();
            } else if (OperationProject.getText().equals("")) {
                JOptionPane.showMessageDialog(this, "the Field  Operation  in the Description  Tab is Empty", "Empty Field", JOptionPane.WARNING_MESSAGE);
                this.jTabbedPane1.setSelectedIndex(2);
                OperationProject.requestFocus();
            } else if (Spouse.getText().equals("")) {
                JOptionPane.showMessageDialog(this, "the Field  Spouse of Person Basic Information  in the Contact Information  Tab is Empty", "Empty Field", JOptionPane.WARNING_MESSAGE);
                this.jTabbedPane1.setSelectedIndex(0);
                Spouse.requestFocus();
            } else if (CBgender.getSelectedItem().equals("Select Gender")) {
                JOptionPane.showMessageDialog(this, "the Field  Gender of Basic Infomation  in the Contact Information  Tab is Empty", "Empty Field", JOptionPane.WARNING_MESSAGE);
                this.jTabbedPane1.setSelectedIndex(0);
                CBgender.requestFocus();
            } else if (target.getText().equals("Select Gender")) {
                JOptionPane.showMessageDialog(this, "the Field Target  in the Description  Tab is Empty", "Empty Field", JOptionPane.WARNING_MESSAGE);
                this.jTabbedPane1.setSelectedIndex(4);
                target.requestFocus();
            } else {

                df = new SimpleDateFormat("yyyy-MM-dd");
                dateString = String.valueOf(df.format(date.getDate()));
                System.out.println(dateString);
                dateRec = String.valueOf(df.format(date.getDate()));
                System.out.println(dateRec);
                int a = JOptionPane.showOptionDialog(this, "Are you sure you what to Update the current Informant Records", "Update Intelegence", WIDTH, WIDTH, null, null, nationalilty);

                if (a == 0) {
                    Connection c = OpenDatabaseConnection();
                    PreparedStatement ps;

                    ps = c.prepareStatement("Update  informant_info set idInformant_info=(?),F_Name=(?),M_Name=(?),L_Name=(?),B_Date=(?),Age=(?),Nationality=(?),Religion=(?),Mar_status=(?),Education=(?),Alias=(?),Place_Birth=(?),P_Adrress=(?),Per_Adrress=(?),Zipcode=(?),S_Codification=(?),Status=(?),B_PAdrress=(?),B_PreAdress=(?),Face=(?),Hair=(?),Complexion=(?),Eyes=(?),Build=(?),Body=(?),Gen_App=(?),Iden_Char=(?),Height=(?),Mel_Service=(?),Other_Org=(?),F_Training=(?),Employement=(?),Position=(?),D_Recuitment=(?),N_Employer=(?),TerminationDate=(?),Mode_Con=(?),Mob_no=(?),Email=(?),P_Con=(?),P_Con_num=(?),EntryTime=(?),EntryDate=(?),PictureFilePath=(?),CodeName=(?),Psedonym=(?),Handlers=(?),OperationProject=(?),SpouseName=(?),TINNR=(?),Gender=(?),Target=(?) where idInformant_info like(?)");
                    //  +"','"++"','"++"','"++"','"++"','"++"','"++"','"++"','"++"','"++"','"++"','"++"','"++"','"++"','"++"','"++"','"++"','"++"','"++"','"++"','"++"','"++"','"++"','"++"','"++"','"++"','"++"','"++"','"++"','"++"'" + ",'"++"','"++"','"++"','"++"','"++"','"++"','"+)+"','"+"','"++"','"++"')");
                    ps.setString(1, this.InformantID.getText());
                    ps.setString(2, this.f_name.getText());
                    ps.setString(3, this.M_Name.getText());
                    ps.setString(4, this.Lname.getText());
                    ps.setString(5, dateString);
                    ps.setString(6, this.age.getText());
                    ps.setString(7, this.nationalilty.getText());
                    ps.setString(8, this.religion.getText());
                    ps.setString(9, this.cb_maritals_status.getSelectedItem().toString());
                    ps.setString(10, this.education.getText());
                    ps.setString(11, this.alias.getText());
                    ps.setString(12, this.place_birth.getText());
                    ps.setString(13, this.presentADD.getText());
                    ps.setString(14, this.PermaentADD.getText());
                    ps.setString(15, this.ZipCode.getText());
                    ps.setString(16, this.S_Codification.getText());
                    ps.setString(17, this.Status_Codification.getSelectedItem().toString());
                    ps.setString(18, this.P_Barangay.getSelectedItem().toString());
                    ps.setString(19, this.Permanet_Barangay.getSelectedItem().toString());
                    ps.setString(20, this.face.getText());
                    ps.setString(21, this.Hair.getText());
                    ps.setString(22, this.Complexion.getSelectedItem().toString());
                    ps.setString(23, this.Eyes.getText());
                    ps.setString(24, this.Build.getText());
                    ps.setString(25, this.Body.getText());
                    ps.setString(26, this.Gen_Apprerance.getText());
                    ps.setString(27, this.Inden_char.getText());
                    ps.setString(28, this.Height.getText());
                    ps.setString(29, this.Mil_Services.getText());
                    ps.setString(30, this.Other_Org.getText());
                    ps.setString(31, this.Fore_training.getText());
                    ps.setString(32, this.Employement.getText());
                    ps.setString(33, this.position.getText());
                    ps.setString(34, dateRec);
                    ps.setString(35, this.Add_emloyer.getText());
                    ps.setString(36, this.Termination_date.getText());
                    ps.setString(37, this.Mode_Contanct.getText());
                    ps.setString(38, this.Mobile_Num.getText());
                    ps.setString(39, this.Email.getText());
                    ps.setString(40, this.ContactPersonm.getText());
                    ps.setString(41, this.Mobile_Contact_Per.getText());
                    ps.setString(42, this.Time);
                    ps.setString(43, this.Date);

                    String updateS = imagePath;
                    // updateS=updateS.replace("\\", "/");
                    System.out.println(imagePath + " hahahha");
                    System.out.println(ImageFilePath.getText());
                    ps.setString(44, ImageFilePath.getText());

                    ps.setString(45, CodeName.getText().toString());
                    ps.setString(46, this.pydonym.getText());
                    ps.setString(47, this.Handler2.getText());
                    ps.setString(48, this.OperationProject.getText());
                    ps.setString(49, this.Spouse.getText());
                    ps.setString(50, this.TIN.getText());
                    ps.setString(51, this.CBgender.getSelectedItem().toString());

                    ps.setString(52, this.target.getText());

                    ps.setString(53, this.InformantID.getText());

                    ps.executeUpdate();

                    JOptionPane.showMessageDialog(null, "Succefully Updated Informant");

                }
            }

        } catch (SQLException e) {
            e.printStackTrace();
            System.out.println(e);
        }

    }

    public void LogUpdateed() {

        try {
            Calendar cal = Calendar.getInstance();
            String Time, Date;
            SimpleDateFormat date = new SimpleDateFormat("yyyy/MM/d");
            SimpleDateFormat time = new SimpleDateFormat("hh:mm:ss");
            Date = date.format(cal.getTime());
            Time = time.format(cal.getTime());

            DBConnection.init();
            Connection c = DBConnection.getConnection();
            PreparedStatement ps;
            ResultSet rs;
            //ps=c.prepareStatement("Insert into informant_info (F_Name,M_Name,L_Name,B_Date,Age,Nationality,Religion,Mar_status,Education,Alias,Place_Birth,P_Adrress,Per_Adrress,Zipcode,S_Codification,Status,B_PAdrress,B_PreAdress,SpouseName,Gender,PictureFilePath,EntryTime,EntryDate,D_Recuitment,Provice,Mun_City,BirthCounty,E_Date,E_Time,Mode_Con,Mob_no,Email,P_Con,P_Con_num)values"+"('"+this.f_name.getText()+"','"+this.M_Name.getText()+"','"+this.Lname.getText()+"','"+dateString+"','"+this.age.getText()+"','"+this.nationalilty.getText()+"','"+this.religion.getText()+"','"+this.cb_maritals_status.getSelectedItem().toString()+"','"+this.education.getText()+"','"+this.alias.getText()+"','"+this.place_birth.getText()+"','"+this.presentADD.getText()+"','"+this.PermaentADD.getText()+"','"+this.ZipCode.getText()+"','"+this.S_Codification.getText()+"','"+this.Status_Codification.getSelectedItem().toString()+"','"+this.P_Barangay.getSelectedItem().toString()+"','"+this.Permanet_Barangay.getSelectedItem().toString()+"','"+this.Spouse.getText()+"','"+this.CBgender.getSelectedItem().toString()+"','"+imagePath+"','"+Time+"','"+Date+"','"+dateRec+"','"+Province.getText()+"','"+CbCityMun.getSelectedItem().toString()+"','"+BirthCountry.getText()+"','"+Date+"','"+Time+"','"+Mode_Contanct.getText()+"','"+Mobile_Num.getText()+"','"+Email.getText()+"','"+ContactPersonm.getText()+"','"+Mobile_Num.getText()+"')");
            ps = c.prepareStatement("Insert into logs(Act,Time,Date)values" + "('Updated Informant ID " + ID + "','" + Time + "','" + Date + "')");
            ps.execute();
            System.out.println("logged update");
            // ps=c.prepareStatement("Select * from  informant_info");
        } catch (SQLException ex) {
            System.out.println(ex);
        }

    }

    public void LoadChild() {

        try {
            model.setRowCount(0);
            DBConnection.init();
            Connection c = DBConnection.getConnection();
            PreparedStatement ps;
            ResultSet rs;
            ps = c.prepareStatement("Select * from  child  where Father_ID like '" + InformantID.getText() + "'");
            rs = ps.executeQuery();
            String date = "";
            while (rs.next()) {
                if (rs.getString(3).equals("0001-01-01")) {
                    date = "";
                } else {
                    date = rs.getString(3);
                }
                model.addRow(new Object[]{rs.getString(1), rs.getString(2), date});

            }
        } catch (SQLException ex) {
            System.out.println(ex);

        }
    }

    public void LogUpdatedINFO() {
        try {
            Calendar cal = Calendar.getInstance();
            String Time, Date;
            SimpleDateFormat date = new SimpleDateFormat("yyyy/MM/d");
            SimpleDateFormat time = new SimpleDateFormat("HH:mm:ss");
            Date = date.format(cal.getTime());
            Time = time.format(cal.getTime());

            DBConnection.init();
            Connection c = DBConnection.getConnection();
            PreparedStatement ps;
            ResultSet rs;
            //ps=c.prepareStatement("Insert into informant_info (F_Name,M_Name,L_Name,B_Date,Age,Nationality,Religion,Mar_status,Education,Alias,Place_Birth,P_Adrress,Per_Adrress,Zipcode,S_Codification,Status,B_PAdrress,B_PreAdress,SpouseName,Gender,PictureFilePath,EntryTime,EntryDate,D_Recuitment,Provice,Mun_City,BirthCounty,E_Date,E_Time,Mode_Con,Mob_no,Email,P_Con,P_Con_num)values"+"('"+this.f_name.getText()+"','"+this.M_Name.getText()+"','"+this.Lname.getText()+"','"+dateString+"','"+this.age.getText()+"','"+this.nationalilty.getText()+"','"+this.religion.getText()+"','"+this.cb_maritals_status.getSelectedItem().toString()+"','"+this.education.getText()+"','"+this.alias.getText()+"','"+this.place_birth.getText()+"','"+this.presentADD.getText()+"','"+this.PermaentADD.getText()+"','"+this.ZipCode.getText()+"','"+this.S_Codification.getText()+"','"+this.Status_Codification.getSelectedItem().toString()+"','"+this.P_Barangay.getSelectedItem().toString()+"','"+this.Permanet_Barangay.getSelectedItem().toString()+"','"+this.Spouse.getText()+"','"+this.CBgender.getSelectedItem().toString()+"','"+imagePath+"','"+Time+"','"+Date+"','"+dateRec+"','"+Province.getText()+"','"+CbCityMun.getSelectedItem().toString()+"','"+BirthCountry.getText()+"','"+Date+"','"+Time+"','"+Mode_Contanct.getText()+"','"+Mobile_Num.getText()+"','"+Email.getText()+"','"+ContactPersonm.getText()+"','"+Mobile_Num.getText()+"')");
            ps = c.prepareStatement("Insert into logs(Act,Time,Date)values" + "('Profile Update ID " + ID + "','" + Time + "','" + Date + "')");
            ps.execute();

            System.out.println("");
            // ps=c.prepareStatement("Select * from  informant_info");
        } catch (SQLException ex) {
            System.out.println(ex);
        }
    }
}
