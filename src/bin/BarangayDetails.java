/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package bin;

import java.awt.Image;
import java.io.File;
import java.io.IOException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.HashMap;
import java.util.Locale;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.design.JRDesignQuery;
import net.sf.jasperreports.engine.design.JasperDesign;
import net.sf.jasperreports.engine.xml.JRXmlLoader;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author Sammy Guergachi <sguergachi at gmail.com>
 */
public class BarangayDetails extends javax.swing.JFrame {

    DefaultTableModel model = new DefaultTableModel();
    public String B_name;
    public int ID;
    IAPS iaps;
    SDCSDS sdcsds;
    ViewALLDETAILS view;
    String dateF, dateT;
    DateFormat df;
    boolean isPrinted = false;
    boolean isUser;

    /**
     * Creates new form BarangayDetails
     */
    public BarangayDetails() {
        initComponents();
        model = (DefaultTableModel) jTable1.getModel();
        LoadNameBarangay();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        BarangayName = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        dateFrom = new com.toedter.calendar.JDateChooser();
        jLabel5 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        DateTO = new com.toedter.calendar.JDateChooser();
        jToggleButton1 = new javax.swing.JToggleButton();
        jPanel3 = new javax.swing.JPanel();
        Search = new javax.swing.JTextField();
        Screteria = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Barangay Informant List");
        setBounds(new java.awt.Rectangle(305, 122, 0, 0));

        jTable1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Name", "Alias", "Date of Recuitment"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        BarangayName.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        BarangayName.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jButton2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/bin/images/Switch.png"))); // NOI18N
        jButton2.setText("Update All Details");
        jButton2.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jButton2.setMaximumSize(new java.awt.Dimension(100, 41));
        jButton2.setPreferredSize(new java.awt.Dimension(100, 41));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/bin/images/Info.png"))); // NOI18N
        jButton3.setText("Profile Sheet");
        jButton3.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jButton3.setMaximumSize(new java.awt.Dimension(100, 41));
        jButton3.setPreferredSize(new java.awt.Dimension(100, 41));
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/bin/images/Information.png"))); // NOI18N
        jButton4.setText("Source Data Card");
        jButton4.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jButton4.setMaximumSize(new java.awt.Dimension(100, 41));
        jButton4.setPreferredSize(new java.awt.Dimension(100, 41));
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/bin/images/print.png"))); // NOI18N
        jButton5.setText("Print List");
        jButton5.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jButton5.setMaximumSize(new java.awt.Dimension(100, 41));
        jButton5.setPreferredSize(new java.awt.Dimension(100, 41));
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/bin/images/Close.png"))); // NOI18N
        jButton6.setText("Close");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton7.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jButton7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/bin/images/Refresh.png"))); // NOI18N
        jButton7.setText("Refresh  List");
        jButton7.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jButton7.setMaximumSize(new java.awt.Dimension(100, 41));
        jButton7.setPreferredSize(new java.awt.Dimension(100, 41));
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButton8.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jButton8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/bin/images/print.png"))); // NOI18N
        jButton8.setText("Source of Codification");
        jButton8.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jButton8.setMaximumSize(new java.awt.Dimension(100, 41));
        jButton8.setPreferredSize(new java.awt.Dimension(100, 41));
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jButton2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 199, Short.MAX_VALUE)
            .addComponent(jButton3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jButton4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jButton6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jButton8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jButton7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 94, Short.MAX_VALUE)
                .addComponent(jButton6)
                .addGap(5, 5, 5))
        );

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel1.setText("Covered Period");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel2.setText("B.I.N");

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        dateFrom.setDateFormatString("yyyy/MM/d ");
        dateFrom.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        dateFrom.setMinSelectableDate(new java.util.Date(-62135737139000L));

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel5.setText("From");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel4.setText("To");

        DateTO.setDateFormatString("yyyy/MM/d ");
        DateTO.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jToggleButton1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jToggleButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/bin/images/search2.png"))); // NOI18N
        jToggleButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(dateFrom, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(DateTO, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jToggleButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(56, 56, 56))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(dateFrom, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(DateTO, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(jToggleButton1))
                .addContainerGap(13, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        Search.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        Search.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                SearchCaretUpdate(evt);
            }
        });
        Search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchActionPerformed(evt);
            }
        });

        Screteria.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        Screteria.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select category", "First Name", "Last Name", "Middle Name", "Alias" }));
        Screteria.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                ScreteriaPropertyChange(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel3.setText("Search");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Screteria, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Search, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(Screteria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Search, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(BarangayName, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(131, 131, 131)
                                .addComponent(jLabel1))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 359, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 574, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(14, 14, 14))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(BarangayName, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
        System.out.println(String.valueOf(model.getValueAt(jTable1.getSelectedRow(), 0)));
        ID = Integer.parseInt(String.valueOf(model.getValueAt(jTable1.getSelectedRow(), 0)));

    }//GEN-LAST:event_jTable1MouseClicked

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        if (view == null) {
            view = new ViewALLDETAILS();

        }

        if (isUser) {
            view.Update_Button.setEnabled(false);
            view.jButton3.setEnabled(false);
            view.jButton1.setEnabled(false);
            view.jButton7.setEnabled(false);
            view.jButton2.setEnabled(false);
            view.jButton5.setEnabled(false);
            view.jButton4.setEnabled(false);
            view.jButton8.setEnabled(false);
        } else {

            view.Update_Button.setEnabled(true);
            view.jButton3.setEnabled(true);
            view.jButton1.setEnabled(true);
            view.jButton7.setEnabled(true);
            view.jButton2.setEnabled(true);
            view.jButton5.setEnabled(true);
            view.jButton4.setEnabled(true);
            view.jButton8.setEnabled(true);

        }
        System.out.println(isUser + "Barangay detials user login");
        ID = Integer.parseInt(String.valueOf(model.getValueAt(jTable1.getSelectedRow(), 0)));
        System.out.println(ID + "Selected");
        if (ID < 0) {
            JOptionPane.showMessageDialog(this, "Please Select a Profile to view");
        } else {
            try {
                view.ID = ID;
                view.LoadDataSelect();
                view.setVisible(true);
            } catch (ParseException ex) {
                System.out.println(ex);
            }
        }

    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        System.out.println(getBounds());
        dispose();
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        try {
            if (VerifyDataIAPS()) {
                JOptionPane.showMessageDialog(this, "Please supply the scanned image of the Profile Sheet to continue.", "Image Empty", JOptionPane.ERROR_MESSAGE);
            } else {
                PrintIapsLegacy();
                LogPrintIPAS();
            }

        } catch (Exception e) {
            System.out.println(e);
            JOptionPane.showMessageDialog(this, "Invalid selection. Please select an informant", "Invalid Informant", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        try {
            if (VerifyDataSDCSDS()) {
                JOptionPane.showMessageDialog(this, "Please supply the scanned image of the Source Data Card to continue.", "Image Empty", JOptionPane.ERROR_MESSAGE);
            } else {
                PrintIapsLegacySDCSDS();
                LogPrintDataCard();
            }
        } catch (Exception e) {
            System.out.println(e);
            JOptionPane.showMessageDialog(this, "Invalid selection. Please select an informant", "Invalid Informant", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        isPrinted = false;
        LoadNameBarangay();
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        if (!isPrinted) {
            Print();
        } else if (isPrinted) {
            PrintCoreveredDate();
            LogPrinnBarangayList();
        }

    }//GEN-LAST:event_jButton5ActionPerformed

    private void SearchCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_SearchCaretUpdate
        // TODO add your handling code here:
        if (Screteria.getSelectedItem().equals("Alias")) {
            LoadSerachDataAliasname();
        } else if (Screteria.getSelectedItem().equals("First Name")) {
            LoadSerachDataFnamename();
        } else if (Screteria.getSelectedItem().equals("Last Name")) {
            LoadSerachDataL_namename();
        } else if (Screteria.getSelectedItem().equals("Middle Name")) {
            LoadSerachDataM_namename();
        }

    }//GEN-LAST:event_SearchCaretUpdate

    private void SearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SearchActionPerformed

    private void jToggleButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton1ActionPerformed
        try {
            // TODO add your handling code here:

            df = new SimpleDateFormat("yyyy/MM/d ");
            dateF = String.valueOf(df.format(dateFrom.getDate()));
            dateT = String.valueOf(df.format(DateTO.getDate()));
            Date myDateFrom = df.parse(dateF);
            Date myDateTO = df.parse(dateT);
            System.out.println(dateF + "  from");
            System.out.println(dateT + "  to");

            LoadshowCoveredPeriod();
            isPrinted = true;

        } catch (ParseException ex) {
            System.out.println(ex);
        }

    }//GEN-LAST:event_jToggleButton1ActionPerformed

    private void ScreteriaPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_ScreteriaPropertyChange
        // TODO add your handling code here:
        isPrinted = false;

    }//GEN-LAST:event_ScreteriaPropertyChange

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        PrintSourceOfCodifaction();
        LogPrintSourceCodificationBRGY();
    }//GEN-LAST:event_jButton8ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BarangayDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BarangayDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BarangayDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BarangayDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BarangayDetails().setVisible(true);
            }
        });
    }

    public void LoadNameBarangay() {
        try {
            model.setRowCount(0);
            DBConnection.init();
            Connection c = DBConnection.getConnection();
            PreparedStatement ps;
            ResultSet rs;
            ps = c.prepareStatement("Select * from  informant_info where B_PAdrress='" + B_name + "'  order by D_Recuitment");
            rs = ps.executeQuery();
            while (rs.next()) {
                model.addRow(new Object[]{rs.getString(1), rs.getString(2) + " " + rs.getString(3) + " " + rs.getString(4), rs.getString(10), rs.getString(51)});
            }

        } catch (Exception e) {
            System.out.println(e);
        }
    }

    public void LoadRecordsProfileIAPS() {
        try {
            DBConnection.init();
            Connection c = DBConnection.getConnection();
            PreparedStatement ps;
            ResultSet rs;
            ps = c.prepareStatement("Select * from  informant_info where idInformant_info='" + ID + "'");
            rs = ps.executeQuery();

            if (rs.next()) {

                iaps.Alias.setText(rs.getString(10));
                iaps.CodeName.setText(rs.getString(43));
                iaps.Pseudonym.setText(rs.getString(44));
                iaps.Name.setText(rs.getString(2) + " " + rs.getString(3) + " " + rs.getString(4));
                iaps.SourceCode.setText(rs.getString(15));
                iaps.PlaceBirth.setText(rs.getString(11));
                iaps.Occupation.setText(rs.getString(32));
                iaps.Education.setText(rs.getString(9));
                iaps.BirthDate.setText(rs.getString(52));
                iaps.NameAddresofEmpolyere.setText(rs.getString(33));
                //iaps.Education.setText(rs.getString(0));
                iaps.Position.setText(rs.getString(32));
                iaps.NameofSpouse.setText(rs.getString(47));
                //this.InformantID.setText(rs.getString(42));
                System.out.println(rs.getString(42));
                File FImage = new File(rs.getString(42));
                // ImageFilePath.setText(rs.getString(44));
                try {
                    Image image = ImageIO.read(FImage);
                    Image myImage = image.getScaledInstance(161, 151, Image.SCALE_FAST);
                    iaps.PictureView.setIcon(new ImageIcon(myImage));
                } catch (IOException ex) {

                    JOptionPane.showMessageDialog(this, ex);
                    System.out.println(ex);

                }

                //Image image=ImageIO.read(sFile);
                //Image myImage=image.getScaledInstance(161, 151,Image.SCALE_FAST)
            }

        } catch (SQLException e) {
            System.out.println(e);
        }

    }

    public void LoadRecordsProfileSDCSDS() {
        try {
            DBConnection.init();
            Connection c = DBConnection.getConnection();
            PreparedStatement ps;
            ResultSet rs;
            ps = c.prepareStatement("Select * from  informant_info where idInformant_info='" + ID + "'");
            rs = ps.executeQuery();
            if (rs.next()) {
                sdcsds.F_name.setText(rs.getString(2));
                sdcsds.LastName.setText(rs.getString(4));
                sdcsds.MiddleName.setText(rs.getString(3));
                sdcsds.DBirth.setText(rs.getString(52));
                sdcsds.Place_Birth.setText(rs.getString(11));
                sdcsds.Gender.setText(rs.getString(49));
                sdcsds.Naitolituy.setText(rs.getString(6));
                sdcsds.Maritalstatus.setText(rs.getString(8));
                sdcsds.Spouse_Name.setText(rs.getString(47));
                sdcsds.CellphoneNum.setText(rs.getString(36));
                sdcsds.TinNumber.setText(rs.getString(48));
                sdcsds.Complexion.setText(rs.getString(21));
                sdcsds.Build.setText(rs.getString(23));
                sdcsds.Face.setText(rs.getString(19));
                sdcsds.Hair.setText(rs.getString(20));
                sdcsds.Eyes.setText(rs.getString(22));
                sdcsds.body.setText(rs.getString(24));
                sdcsds.Height.setText(rs.getString(27));
                sdcsds.Gen_app.setText(rs.getString(25));
                sdcsds.IdentifyChar.setText(rs.getString(26));
                sdcsds.Education.setText(rs.getString(9));
                sdcsds.Fore_traing.setText(rs.getString(30));
                sdcsds.MilitaryServicess.setText(rs.getString(28));
                sdcsds.Employment.setText(rs.getString(31) + " ," + rs.getString(32));
                sdcsds.MemBEr_Org.setText(rs.getString(29));
                sdcsds.Targets.setText(rs.getString(50));
                sdcsds.Codename.setText(rs.getString(43));
                sdcsds.OperationPorj.setText(rs.getString(46));
                sdcsds.DateofRecuitment.setText(rs.getString(51));
                sdcsds.Handlers.setText(rs.getString(45));
                sdcsds.ContactPErson.setText(rs.getString(38) + " " + rs.getString(39));

                //this.InformantID.setText(rs.getString(42));
                System.out.println(rs.getString(42));
                File FImage = new File(rs.getString(42));
                // ImageFilePath.setText(rs.getString(44));
                try {
                    Image image = ImageIO.read(FImage);
                    Image myImage = image.getScaledInstance(161, 151, Image.SCALE_FAST);
                    sdcsds.PictureView.setIcon(new ImageIcon(myImage));
                } catch (IOException ex) {

                    JOptionPane.showMessageDialog(this, ex);
                    System.out.println(ex);

                }

                //Image image=ImageIO.read(sFile);
                //Image myImage=image.getScaledInstance(161, 151,Image.SCALE_FAST)
            }

        } catch (SQLException e) {
            System.out.println(e);
        }

    }

    @SuppressWarnings({"unchecked", "unchecked"})
    public void Print() {
        try {
            JasperReport JR;
            JasperPrint JP;

            // String Q="%"+this.txtSearch.getText() +"%";
            // String Source="C:\\Users\\JAMIEXXX3\\Documents\\NetBeansProjects\\Phonelist\\src\\Forms\\report1.jrxml";
            System.out.println(B_name + " Print");
            DBConnection.init();
            JasperDesign Jd = JRXmlLoader.load(System.getProperty("user.dir") + "\\\\reports\\\\SourceOfCodiPerBrgy.jrxml");

            String SQL = "Select * from  informant_info where B_PAdrress='" + B_name + "'";

            JRDesignQuery JQ = new JRDesignQuery();
            JQ.setText(SQL);
            Jd.setQuery(JQ);
            JR = JasperCompileManager.compileReport(Jd);
            HashMap m = new HashMap<>();
            m.put("parameter1", "");
            JP = JasperFillManager.fillReport(JR, m, DBConnection.getConnection());
            // JasperViewer.viewReport(JP, rootPaneCheckingEnabled, Locale.FRENCH);

            JasperViewer.viewReport(JP, false, Locale.ENGLISH);

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e);
            System.out.println(e);
        }

    }

    @SuppressWarnings({"unchecked", "unchecked"})
    public void PrintSourceOfCodifaction() {
        try {
            JasperReport JR;
            JasperPrint JP;

            // String Q="%"+this.txtSearch.getText() +"%";
            // String Source="C:\\Users\\JAMIEXXX3\\Documents\\NetBeansProjects\\Phonelist\\src\\Forms\\report1.jrxml";
            System.out.println(B_name + " Print Source Codification");
            DBConnection.init();
            JasperDesign Jd = JRXmlLoader.load(System.getProperty("user.dir") + "\\\\reports\\\\SourceOfCodiPerBrgy.jrxml");

            String SQL = "Select * from  informant_info where B_PAdrress='" + B_name + "'";

            JRDesignQuery JQ = new JRDesignQuery();
            JQ.setText(SQL);
            Jd.setQuery(JQ);
            JR = JasperCompileManager.compileReport(Jd);
            HashMap m = new HashMap<>();
            m.put("Label1", "List of source of codifcation of barangay " + B_name);
            JP = JasperFillManager.fillReport(JR, m, DBConnection.getConnection());
            // JasperViewer.viewReport(JP, rootPaneCheckingEnabled, Locale.FRENCH);

            JasperViewer.viewReport(JP, false, Locale.ENGLISH);

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e);
            System.out.println(e);
        }

    }

    @SuppressWarnings({"unchecked", "unchecked"})
    public void PrintCoreveredDate() {
        try {
            JasperReport JR;
            JasperPrint JP;

            // String Q="%"+this.txtSearch.getText() +"%";
            // String Source="C:\\Users\\JAMIEXXX3\\Documents\\NetBeansProjects\\Phonelist\\src\\Forms\\report1.jrxml";
            System.out.println(B_name + " Print");
            DBConnection.init();
            JasperDesign Jd = JRXmlLoader.load(System.getProperty("user.dir") + "\\\\reports\\\\InformantList_Brgy.jrxml");

            String SQL = "Select * from  informant_info where B_PAdrress='" + B_name + "' and  D_Recuitment between '" + dateF + "' and '" + dateT + "'";

            JRDesignQuery JQ = new JRDesignQuery();
            JQ.setText(SQL);
            Jd.setQuery(JQ);
            JR = JasperCompileManager.compileReport(Jd);

            @SuppressWarnings("unchecked")
            HashMap m = new HashMap<>();

            df = new SimpleDateFormat("MMMMMMMM d, yyyy");
            dateF = String.valueOf(df.format(dateFrom.getDate()));
            dateT = String.valueOf(df.format(DateTO.getDate()));
            //Date myDate=df.parse(dateString);
            //System.out.println(dateString);

            m.put("parameter1", "Covered Period:" + dateF + "  to  " + dateT);

            JP = JasperFillManager.fillReport(JR, m, DBConnection.getConnection());
            // JasperViewer.viewReport(JP, rootPaneCheckingEnabled, Locale.FRENCH);

            JasperViewer.viewReport(JP, false, Locale.ENGLISH);

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e);
            System.out.println(e);
        }

    }

    public void LoadSerachDataAliasname() {
        try {
            model.setRowCount(0);
            String S = "%" + this.Search.getText() + "%";
            DBConnection.init();
            Connection c = DBConnection.getConnection();
            PreparedStatement ps;
            ResultSet rs;
            ps = c.prepareStatement("Select * from  informant_info where B_PAdrress ='" + B_name + "' and Alias like '" + S + "'");
            rs = ps.executeQuery();
            while (rs.next()) {

                model.addRow(new Object[]{rs.getString(1), rs.getString(2) + " " + rs.getString(3) + " " + rs.getString(4), rs.getString(10), rs.getString(51)});
            }
        } catch (Exception e) {
            System.out.println(e);
        }
    }

    public void LoadSerachDataFnamename() {
        try {
            model.setRowCount(0);
            String S = "%" + this.Search.getText() + "%";
            DBConnection.init();
            Connection c = DBConnection.getConnection();
            PreparedStatement ps;
            ResultSet rs;
            ps = c.prepareStatement("Select * from  informant_info where B_PAdrress ='" + B_name + "' and F_Name like '" + S + "'");
            rs = ps.executeQuery();
            while (rs.next()) {

                model.addRow(new Object[]{rs.getString(1), rs.getString(2) + " " + rs.getString(3) + " " + rs.getString(4), rs.getString(10), rs.getString(51)});
            }
        } catch (Exception e) {
            System.out.println(e);
        }
    }

    public void LoadSerachDataL_namename() {
        try {
            model.setRowCount(0);
            String S = "%" + this.Search.getText() + "%";
            DBConnection.init();
            Connection c = DBConnection.getConnection();
            PreparedStatement ps;
            ResultSet rs;
            ps = c.prepareStatement("Select * from  informant_info where B_PAdrress ='" + B_name + "' and L_Name like '" + S + "'");
            rs = ps.executeQuery();
            while (rs.next()) {

                model.addRow(new Object[]{rs.getString(1), rs.getString(2) + " " + rs.getString(3) + " " + rs.getString(4), rs.getString(10), rs.getString(51)});
            }
        } catch (Exception e) {
            System.out.println(e);
        }
    }

    public void LoadSerachDataM_namename() {
        try {
            model.setRowCount(0);
            String S = "%" + this.Search.getText() + "%";
            DBConnection.init();
            Connection c = DBConnection.getConnection();
            PreparedStatement ps;
            ResultSet rs;
            ps = c.prepareStatement("Select * from  informant_info where B_PAdrress ='" + B_name + "' and M_Name like '" + S + "'");
            rs = ps.executeQuery();
            while (rs.next()) {

                model.addRow(new Object[]{rs.getString(1), rs.getString(2) + " " + rs.getString(3) + " " + rs.getString(4), rs.getString(10), rs.getString(51)});
            }
        } catch (Exception e) {
            System.out.println(e);
        }
    }

    public void LoadshowCoveredPeriod() {
        try {
            model.setRowCount(0);
            DBConnection.init();
            Connection c = DBConnection.getConnection();
            PreparedStatement ps;
            ResultSet rs;
            ps = c.prepareStatement("Select * from  informant_info where B_PAdrress='" + B_name + "' and  D_Recuitment between '" + dateF + "' and '" + dateT + "'");
            rs = ps.executeQuery();
            while (rs.next()) {
                model.addRow(new Object[]{rs.getString(1), rs.getString(2) + " " + rs.getString(3) + " " + rs.getString(4), rs.getString(10), rs.getString(51)});
            }

        } catch (Exception e) {
            System.out.println(e);
        }

    }

    public void LogPrinnBarangayList() {
        try {
            Calendar cal = Calendar.getInstance();
            String Time, Date;
            SimpleDateFormat date = new SimpleDateFormat("yyyy/MM/d");
            SimpleDateFormat time = new SimpleDateFormat("HH:mm:ss");
            Date = date.format(cal.getTime());
            Time = time.format(cal.getTime());

            DBConnection.init();
            Connection c = DBConnection.getConnection();
            PreparedStatement ps;
            ResultSet rs;
            //ps=c.prepareStatement("Insert into informant_info (F_Name,M_Name,L_Name,B_Date,Age,Nationality,Religion,Mar_status,Education,Alias,Place_Birth,P_Adrress,Per_Adrress,Zipcode,S_Codification,Status,B_PAdrress,B_PreAdress,SpouseName,Gender,PictureFilePath,EntryTime,EntryDate,D_Recuitment,Provice,Mun_City,BirthCounty,E_Date,E_Time,Mode_Con,Mob_no,Email,P_Con,P_Con_num)values"+"('"+this.f_name.getText()+"','"+this.M_Name.getText()+"','"+this.Lname.getText()+"','"+dateString+"','"+this.age.getText()+"','"+this.nationalilty.getText()+"','"+this.religion.getText()+"','"+this.cb_maritals_status.getSelectedItem().toString()+"','"+this.education.getText()+"','"+this.alias.getText()+"','"+this.place_birth.getText()+"','"+this.presentADD.getText()+"','"+this.PermaentADD.getText()+"','"+this.ZipCode.getText()+"','"+this.S_Codification.getText()+"','"+this.Status_Codification.getSelectedItem().toString()+"','"+this.P_Barangay.getSelectedItem().toString()+"','"+this.Permanet_Barangay.getSelectedItem().toString()+"','"+this.Spouse.getText()+"','"+this.CBgender.getSelectedItem().toString()+"','"+imagePath+"','"+Time+"','"+Date+"','"+dateRec+"','"+Province.getText()+"','"+CbCityMun.getSelectedItem().toString()+"','"+BirthCountry.getText()+"','"+Date+"','"+Time+"','"+Mode_Contanct.getText()+"','"+Mobile_Num.getText()+"','"+Email.getText()+"','"+ContactPersonm.getText()+"','"+Mobile_Num.getText()+"')");
            ps = c.prepareStatement("Insert into logs(Act,Time,Date)values" + "('ABS print date From " + dateF + " to " + dateT + "','" + Time + "','" + Date + "')");
            ps.execute();
            // ps=c.prepareStatement("Select * from  informant_info");
        } catch (SQLException ex) {
            System.out.println(ex);
        }

    }

    public void LogPrintSourceCodificationBRGY() {
        try {
            Calendar cal = Calendar.getInstance();
            String Time, Date;
            SimpleDateFormat date = new SimpleDateFormat("yyyy/MM/d");
            SimpleDateFormat time = new SimpleDateFormat("HH:mm:ss");
            Date = date.format(cal.getTime());
            Time = time.format(cal.getTime());

            DBConnection.init();
            Connection c = DBConnection.getConnection();
            PreparedStatement ps;
            ResultSet rs;
            //ps=c.prepareStatement("Insert into informant_info (F_Name,M_Name,L_Name,B_Date,Age,Nationality,Religion,Mar_status,Education,Alias,Place_Birth,P_Adrress,Per_Adrress,Zipcode,S_Codification,Status,B_PAdrress,B_PreAdress,SpouseName,Gender,PictureFilePath,EntryTime,EntryDate,D_Recuitment,Provice,Mun_City,BirthCounty,E_Date,E_Time,Mode_Con,Mob_no,Email,P_Con,P_Con_num)values"+"('"+this.f_name.getText()+"','"+this.M_Name.getText()+"','"+this.Lname.getText()+"','"+dateString+"','"+this.age.getText()+"','"+this.nationalilty.getText()+"','"+this.religion.getText()+"','"+this.cb_maritals_status.getSelectedItem().toString()+"','"+this.education.getText()+"','"+this.alias.getText()+"','"+this.place_birth.getText()+"','"+this.presentADD.getText()+"','"+this.PermaentADD.getText()+"','"+this.ZipCode.getText()+"','"+this.S_Codification.getText()+"','"+this.Status_Codification.getSelectedItem().toString()+"','"+this.P_Barangay.getSelectedItem().toString()+"','"+this.Permanet_Barangay.getSelectedItem().toString()+"','"+this.Spouse.getText()+"','"+this.CBgender.getSelectedItem().toString()+"','"+imagePath+"','"+Time+"','"+Date+"','"+dateRec+"','"+Province.getText()+"','"+CbCityMun.getSelectedItem().toString()+"','"+BirthCountry.getText()+"','"+Date+"','"+Time+"','"+Mode_Contanct.getText()+"','"+Mobile_Num.getText()+"','"+Email.getText()+"','"+ContactPersonm.getText()+"','"+Mobile_Num.getText()+"')");
            ps = c.prepareStatement("Insert into logs(Act,Time,Date)values" + "('Print source of cofication of " + B_name + "  ','" + Time + "','" + Date + "')");
            ps.execute();
            // ps=c.prepareStatement("Select * from  informant_info");
        } catch (SQLException ex) {
            System.out.println(ex);
        }

    }

    public Boolean VerifyDataLegacy() {
        try {

            DBConnection.init();
            Connection c = DBConnection.getConnection();
            PreparedStatement ps;
            ResultSet rs;
            ps = c.prepareStatement("Select * from  informant_info where idInformant_info='" + ID + "'");
            rs = ps.executeQuery();
            while (rs.next()) {
                if ("Legacy".equals(rs.getString(65))) {
                    System.out.println("Legacy True");
                    return true;
                } else {
                    System.out.println("Legacy false");
                }

            }

        } catch (SQLException e) {
            System.out.println(e);
        }
        return false;
    }

    public void PrintIapsLegacy() {
        try {
            JasperReport JR;
            JasperPrint JP;

            // String Q="%"+this.txtSearch.getText() +"%";
            // String Source="C:\\Users\\JAMIEXXX3\\Documents\\NetBeansProjects\\Phonelist\\src\\Forms\\report1.jrxml";
            DBConnection.init();
            JasperDesign Jd = JRXmlLoader.load(System.getProperty("user.dir") + "\\\\reports\\\\Legacy.jrxml");

            String SQL = "Select * from  informant_info where idInformant_info='" + ID + "'";

            JRDesignQuery JQ = new JRDesignQuery();
            JQ.setText(SQL);
            Jd.setQuery(JQ);
            JR = JasperCompileManager.compileReport(Jd);
            JP = JasperFillManager.fillReport(JR, null, DBConnection.getConnection());
            // JasperViewer.viewReport(JP, rootPaneCheckingEnabled, Locale.FRENCH);

            JasperViewer.viewReport(JP, false, Locale.ENGLISH);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e);
            System.out.println(e);
        }

    }

    public void PrintIapsLegacySDCSDS() {
        try {
            JasperReport JR;
            JasperPrint JP;

            // String Q="%"+this.txtSearch.getText() +"%";
            // String Source="C:\\Users\\JAMIEXXX3\\Documents\\NetBeansProjects\\Phonelist\\src\\Forms\\report1.jrxml";
            DBConnection.init();
            JasperDesign Jd = JRXmlLoader.load(System.getProperty("user.dir") + "\\\\reports\\\\Legacy_1.jrxml");

            String SQL = "Select * from  informant_info where idInformant_info='" + ID + "'";

            JRDesignQuery JQ = new JRDesignQuery();
            JQ.setText(SQL);
            Jd.setQuery(JQ);
            JR = JasperCompileManager.compileReport(Jd);
            JP = JasperFillManager.fillReport(JR, null, DBConnection.getConnection());
            // JasperViewer.viewReport(JP, rootPaneCheckingEnabled, Locale.FRENCH);

            JasperViewer.viewReport(JP, false, Locale.ENGLISH);

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e);
            System.out.println(e);
        }

    }

    public Boolean VerifyDataIAPS() {
        try {

            DBConnection.init();
            Connection c = DBConnection.getConnection();
            PreparedStatement ps;
            ResultSet rs;
            ps = c.prepareStatement("Select * from  informant_info where idInformant_info='" + ID + "'");
            rs = ps.executeQuery();
            while (rs.next()) {
                if ("".equals(rs.getString(63))) {
                    System.out.println("Legacy True");
                    return true;
                } else {
                    System.out.println("Legacy false");
                }

            }

        } catch (SQLException e) {
            System.out.println(e);
        }
        return false;
    }

    public Boolean VerifyDataSDCSDS() {
        try {

            DBConnection.init();
            Connection c = DBConnection.getConnection();
            PreparedStatement ps;
            ResultSet rs;
            ps = c.prepareStatement("Select * from  informant_info where idInformant_info='" + ID + "'");
            rs = ps.executeQuery();
            while (rs.next()) {
                if ("".equals(rs.getString(64))) {
                    System.out.println("Legacy True");
                    return true;
                } else {
                    System.out.println("Legacy false");
                }

            }

        } catch (SQLException e) {
            System.out.println(e);
        }
        return false;
    }

    public void LogPrintIPAS() {
        try {
            Calendar cal = Calendar.getInstance();
            String Time, Date;
            SimpleDateFormat date = new SimpleDateFormat("yyyy/MM/d");
            SimpleDateFormat time = new SimpleDateFormat("HH:mm:ss");
            Date = date.format(cal.getTime());
            Time = time.format(cal.getTime());

            DBConnection.init();
            Connection c = DBConnection.getConnection();
            PreparedStatement ps;
            ResultSet rs;
            //ps=c.prepareStatement("Insert into informant_info (F_Name,M_Name,L_Name,B_Date,Age,Nationality,Religion,Mar_status,Education,Alias,Place_Birth,P_Adrress,Per_Adrress,Zipcode,S_Codification,Status,B_PAdrress,B_PreAdress,SpouseName,Gender,PictureFilePath,EntryTime,EntryDate,D_Recuitment,Provice,Mun_City,BirthCounty,E_Date,E_Time,Mode_Con,Mob_no,Email,P_Con,P_Con_num)values"+"('"+this.f_name.getText()+"','"+this.M_Name.getText()+"','"+this.Lname.getText()+"','"+dateString+"','"+this.age.getText()+"','"+this.nationalilty.getText()+"','"+this.religion.getText()+"','"+this.cb_maritals_status.getSelectedItem().toString()+"','"+this.education.getText()+"','"+this.alias.getText()+"','"+this.place_birth.getText()+"','"+this.presentADD.getText()+"','"+this.PermaentADD.getText()+"','"+this.ZipCode.getText()+"','"+this.S_Codification.getText()+"','"+this.Status_Codification.getSelectedItem().toString()+"','"+this.P_Barangay.getSelectedItem().toString()+"','"+this.Permanet_Barangay.getSelectedItem().toString()+"','"+this.Spouse.getText()+"','"+this.CBgender.getSelectedItem().toString()+"','"+imagePath+"','"+Time+"','"+Date+"','"+dateRec+"','"+Province.getText()+"','"+CbCityMun.getSelectedItem().toString()+"','"+BirthCountry.getText()+"','"+Date+"','"+Time+"','"+Mode_Contanct.getText()+"','"+Mobile_Num.getText()+"','"+Email.getText()+"','"+ContactPersonm.getText()+"','"+Mobile_Num.getText()+"')");
            ps = c.prepareStatement("Insert into logs(Act,Time,Date)values" + "('Profile sheet viewed Id " + ID + "','" + Time + "','" + Date + "')");
            ps.execute();

            System.out.println("");
            // ps=c.prepareStatement("Select * from  informant_info");
        } catch (SQLException ex) {
            System.out.println(ex);
        }
    }

    public void LogPrintDataCard() {
        try {
            Calendar cal = Calendar.getInstance();
            String Time, Date;
            SimpleDateFormat date = new SimpleDateFormat("yyyy/MM/d");
            SimpleDateFormat time = new SimpleDateFormat("HH:mm:ss");
            Date = date.format(cal.getTime());
            Time = time.format(cal.getTime());

            DBConnection.init();
            Connection c = DBConnection.getConnection();
            PreparedStatement ps;
            ResultSet rs;
            //ps=c.prepareStatement("Insert into informant_info (F_Name,M_Name,L_Name,B_Date,Age,Nationality,Religion,Mar_status,Education,Alias,Place_Birth,P_Adrress,Per_Adrress,Zipcode,S_Codification,Status,B_PAdrress,B_PreAdress,SpouseName,Gender,PictureFilePath,EntryTime,EntryDate,D_Recuitment,Provice,Mun_City,BirthCounty,E_Date,E_Time,Mode_Con,Mob_no,Email,P_Con,P_Con_num)values"+"('"+this.f_name.getText()+"','"+this.M_Name.getText()+"','"+this.Lname.getText()+"','"+dateString+"','"+this.age.getText()+"','"+this.nationalilty.getText()+"','"+this.religion.getText()+"','"+this.cb_maritals_status.getSelectedItem().toString()+"','"+this.education.getText()+"','"+this.alias.getText()+"','"+this.place_birth.getText()+"','"+this.presentADD.getText()+"','"+this.PermaentADD.getText()+"','"+this.ZipCode.getText()+"','"+this.S_Codification.getText()+"','"+this.Status_Codification.getSelectedItem().toString()+"','"+this.P_Barangay.getSelectedItem().toString()+"','"+this.Permanet_Barangay.getSelectedItem().toString()+"','"+this.Spouse.getText()+"','"+this.CBgender.getSelectedItem().toString()+"','"+imagePath+"','"+Time+"','"+Date+"','"+dateRec+"','"+Province.getText()+"','"+CbCityMun.getSelectedItem().toString()+"','"+BirthCountry.getText()+"','"+Date+"','"+Time+"','"+Mode_Contanct.getText()+"','"+Mobile_Num.getText()+"','"+Email.getText()+"','"+ContactPersonm.getText()+"','"+Mobile_Num.getText()+"')");
            ps = c.prepareStatement("Insert into logs(Act,Time,Date)values" + "('Source Data card viewed Id " + ID + "','" + Time + "','" + Date + "')");
            ps.execute();

            System.out.println("");
            // ps=c.prepareStatement("Select * from  informant_info");
        } catch (SQLException ex) {
            System.out.println(ex);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JLabel BarangayName;
    private com.toedter.calendar.JDateChooser DateTO;
    private javax.swing.JComboBox Screteria;
    private javax.swing.JTextField Search;
    private javax.swing.ButtonGroup buttonGroup1;
    private com.toedter.calendar.JDateChooser dateFrom;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JToggleButton jToggleButton1;
    // End of variables declaration//GEN-END:variables
}
